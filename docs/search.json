[
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Load packages\n\nlibrary(here)\n\nhere() starts at C:/Users/chaoh/Desktop/UGA Courses/4_Spring 2024/EPID 8060E/MADA/chaohuali-MADA-portfolio\n\nlibrary(Hmisc)\n\n\nAttaching package: 'Hmisc'\n\n\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()    masks stats::filter()\n✖ dplyr::lag()       masks stats::lag()\n✖ dplyr::src()       masks Hmisc::src()\n✖ dplyr::summarize() masks Hmisc::summarize()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(rsample)\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n✔ broom        1.0.5     ✔ recipes      1.0.9\n✔ dials        1.2.0     ✔ tune         1.1.2\n✔ infer        1.0.5     ✔ workflows    1.1.3\n✔ modeldata    1.2.0     ✔ workflowsets 1.0.1\n✔ parsnip      1.1.1     ✔ yardstick    1.2.0\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard()    masks purrr::discard()\n✖ dplyr::filter()      masks stats::filter()\n✖ recipes::fixed()     masks stringr::fixed()\n✖ dplyr::lag()         masks stats::lag()\n✖ yardstick::spec()    masks readr::spec()\n✖ dplyr::src()         masks Hmisc::src()\n✖ recipes::step()      masks stats::step()\n✖ dplyr::summarize()   masks Hmisc::summarize()\n✖ parsnip::translate() masks Hmisc::translate()\n• Use tidymodels_prefer() to resolve common conflicts.\n\nlibrary(kknn)\n\nWarning: package 'kknn' was built under R version 4.3.3\n\nlibrary(gtsummary)\n\n\nAttaching package: 'gtsummary'\n\nThe following objects are masked from 'package:recipes':\n\n    all_double, all_factor, all_integer, all_logical, all_numeric\n\nlibrary(pROC)\n\nWarning: package 'pROC' was built under R version 4.3.3\n\n\nType 'citation(\"pROC\")' for a citation.\n\nAttaching package: 'pROC'\n\nThe following objects are masked from 'package:stats':\n\n    cov, smooth, var\n\n\n\n\nLoad Tidy Tuesday Data\nLoad 2023 & 2024 US Solar Eclipses Data\n\n#Read directly from GitHub\neclipse_annular_2023 &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-04-09/eclipse_annular_2023.csv')\n\nRows: 811 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): state, name\ndbl  (2): lat, lon\ntime (6): eclipse_1, eclipse_2, eclipse_3, eclipse_4, eclipse_5, eclipse_6\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\neclipse_total_2024 &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-04-09/eclipse_total_2024.csv')\n\nRows: 3330 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): state, name\ndbl  (2): lat, lon\ntime (6): eclipse_1, eclipse_2, eclipse_3, eclipse_4, eclipse_5, eclipse_6\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\neclipse_partial_2023 &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-04-09/eclipse_partial_2023.csv')\n\nRows: 31363 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): state, name\ndbl  (2): lat, lon\ntime (5): eclipse_1, eclipse_2, eclipse_3, eclipse_4, eclipse_5\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\neclipse_partial_2024 &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-04-09/eclipse_partial_2024.csv')\n\nRows: 28844 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): state, name\ndbl  (2): lat, lon\ntime (5): eclipse_1, eclipse_2, eclipse_3, eclipse_4, eclipse_5\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#save the data in the \"data\" folder\nsaveRDS(eclipse_annular_2023,here(\"data\",\"eclipse_annular_2023.rds\")) \nsaveRDS(eclipse_total_2024,here(\"data\",\"eclipse_total_2024.rds\")) \nsaveRDS(eclipse_partial_2023,here(\"data\",\"eclipse_partial_2023.rds\")) \nsaveRDS(eclipse_partial_2024,here(\"data\",\"eclipse_partial_2024.rds\")) \n\nFour datasets with similar structures were provided. For this exercise, I chose ‘eclipse_total_2024’. This dataset contains information of cities in the US on the path of 2024 totality eclipse.\n\n\n1.Load, wrangle and explore the data\n\n#Read saved rds data of 2024 totality eclipse\ntotal_2024&lt;-readRDS( here(\"data\", \"eclipse_total_2024.rds\"))\n\n#Summarize variables in the dataset\ndescribe(total_2024)\n\ntotal_2024 \n\n 10  Variables      3330  Observations\n--------------------------------------------------------------------------------\nstate \n       n  missing distinct \n    3330        0       14 \n                                                                            \nValue         AR    IL    IN    KY    ME    MI    MO    NH    NY    OH    OK\nFrequency    365   252   586    38    28     3   168     4   403   693    41\nProportion 0.110 0.076 0.176 0.011 0.008 0.001 0.050 0.001 0.121 0.208 0.012\n                            \nValue         PA    TX    VT\nFrequency     71   591    87\nProportion 0.021 0.177 0.026\n--------------------------------------------------------------------------------\nname \n       n  missing distinct \n    3330        0     2938 \n\nlowest : Abbott     Abington   Acorn      Ada        Adams     \nhighest: Zanesville Zeigler    Zephyr     Zinc       Zionsville\n--------------------------------------------------------------------------------\nlat \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    3330        0     3330        1    38.33    4.494    31.08    32.46 \n     .25      .50      .75      .90      .95 \n   35.42    39.24    41.22    43.07    44.27 \n\nlowest : 28.4461 28.505  28.5089 28.5258 28.5699\nhighest: 46.689  46.7671 46.7884 46.8365 46.9112\n--------------------------------------------------------------------------------\nlon \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    3330        0     3330        1   -86.93    8.064   -97.77   -96.92 \n     .25      .50      .75      .90      .95 \n  -92.41   -86.56   -82.31   -77.40   -74.96 \n\nlowest : -101.159 -101.153 -100.953 -100.943 -100.882\nhighest: -67.8683 -67.8322 -67.8319 -67.8308 -67.4292\n--------------------------------------------------------------------------------\neclipse_1 [secs] \n       n  missing distinct \n    3330        0      416 \n\nlowest : 17:10:20 17:10:30 17:10:40 17:10:50 17:11:00\nhighest: 18:22:10 18:22:20 18:22:30 18:22:40 18:22:50\n--------------------------------------------------------------------------------\neclipse_2 [secs] \n       n  missing distinct \n    3330        0      398 \n\nlowest : 17:55:20 17:55:30 17:55:40 17:56:00 17:56:10\nhighest: 19:03:30 19:03:40 19:03:50 19:04:00 19:04:20\n--------------------------------------------------------------------------------\neclipse_3 [secs] \n       n  missing distinct \n    3330        0     2012 \n\nlowest : 18:27:30 18:27:32 18:27:33 18:27:36 18:27:37\nhighest: 19:32:27 19:32:29 19:32:34 19:32:40 19:34:00\n--------------------------------------------------------------------------------\neclipse_4 [secs] \n       n  missing distinct \n    3330        0     2032 \n\nlowest : 18:30:24 18:30:35 18:31:26 18:31:35 18:31:43\nhighest: 19:35:06 19:35:08 19:35:17 19:35:18 19:35:25\n--------------------------------------------------------------------------------\neclipse_5 [secs] \n       n  missing distinct \n    3330        0      340 \n\nlowest : 19:04:40 19:04:50 19:05:00 19:05:10 19:05:30\nhighest: 20:02:30 20:02:40 20:02:50 20:03:00 20:03:20\n--------------------------------------------------------------------------------\neclipse_6 [secs] \n       n  missing distinct \n    3330        0      293 \n\nlowest : 19:51:20 19:51:30 19:51:40 19:51:50 19:52:10\nhighest: 20:40:40 20:40:50 20:41:00 20:41:10 20:41:30\n--------------------------------------------------------------------------------\n\n\nAccording the summaries above, there are 3330 cities from 14 states on the path of 2024 totality eclipse. None of the variables contain missing values. The latitude of the cities ranges from 28.4461 to 46.9112; the longitude ranges from -101.159 to -67.4292.There are duplicate names for the cities (2938 distinct names).\n\n#Calculate eclipse duration \ntotal_2024&lt;-total_2024 %&gt;%\n  mutate(duration=as.numeric(difftime(strptime(eclipse_6, \"%H:%M:%S\"),\n                                      strptime(eclipse_1, \"%H:%M:%S\"),units = \"mins\")))\n\n#Plot latitudes and longitudes of the cities by state\nggplot(total_2024, aes(x = lon, y = lat, group = state, color = state)) +\n  geom_point() +\n  labs(title = \"Latitudes and longitudes of the cities on the path of 2024 totality eclipse by state\",\n       x = \"Longitude\",\n       y = \"Latitude\",\n       color = \"State\")\n\n\n\n\n\n\n\n\n\n#Plot eclipse duration and longitudes of the cities by state\nggplot(total_2024, aes(x = lon, y = duration, group = state, color = state)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Longitudes and eclipse duration of the cities on the path \\nof 2024 totality eclipse by state\",\n       x = \"Longitude\",\n       y = \"Eclipse duration(min)\",\n       color = \"State\")\n\n\n\n\n\n\n\n\n\n#Plot eclipse duration and latitudes of the cities by state\nggplot(total_2024, aes(x = lat, y = duration, group = state, color = state)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Latitudes and eclipse duration of the cities on the path \\nof 2024 totality eclipse by state\",\n       x = \"Latitude\",\n       y = \"Eclipse duration(min)\",\n       color = \"State\")\n\n\n\n\n\n\n\n\n\n#Make correlation matrix for latitude, longitude and eclipse duration\ncor(total_2024[,c('lat','lon','duration')])\n\n                lat        lon   duration\nlat       1.0000000  0.9720235 -0.9662055\nlon       0.9720235  1.0000000 -0.9916722\nduration -0.9662055 -0.9916722  1.0000000\n\n\nThe correlation coefficients are all greater than 0.95, indicating very high correlation among the latitude, longitude and eclipse duration.\n\n\n2.Determine the research question\nWith such correlated data and limited number of variables, it is difficult to come up with a research question. Thus, it is necessary to create some synthetic data. As eclipse is distracting and reduces daylight, it might increase the chance of traffic accidents. I would synthesize two variables: (1) whether the city had more traffic accidents on the day of eclipse than a week before, codes as Yes/No; (2) traffic infrastructure quality index, ranges from 1-10.\nThe research question would be: does longer eclipse duration increase the odds of traffic accidents among the cities on the path of 2024 totality eclipse?\nI would use whether the city has more traffic accidents than a week before as the outcome, and use eclipse duration as the main predictor, and use state and traffic infrastructure quality index as covariates.\n\n\n3.Pre-process data for analysis\nCreate synthetic variables:\n\nmore_accident: whether the city had more traffic accidents on the day of eclipse than a week before, codes as Yes/No. To create an artificial association, cities with eclipse duration&gt;150 mins will have a 80% chance of being coded as ‘Yes’; cities with eclipse duration&lt;=150 mins will have a 40% chance of being coded as ‘Yes’.\ntraffic: traffic infrastructure quality index, ranges from 1-10. The variable will take a random number between 1 and 10.\n\n\n#set seed\nrngseed&lt;-1234\nset.seed(rngseed)\n\n#function to generate more_accident variable based on duration\ngenerate_more_accident &lt;- function(duration) {\n  if (duration &gt; 150) {\n    return(ifelse(runif(1) &lt; 0.9, 'Yes', 'No'))\n  } else {\n    return(ifelse(runif(1) &lt; 0.4, 'Yes', 'No'))\n  }\n}\n\n#apply the function to create more_accident variable\ntotal_2024$more_accident &lt;- sapply(total_2024$duration, generate_more_accident)\n\n#create traffic variable\nset.seed(rngseed)\ntotal_2024$traffic&lt;-runif(3330, min = 1, max = 10)\n\n#check two synthetic variables\ndescribe(total_2024$traffic)\n\ntotal_2024$traffic \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n    3330        0     3330        1    5.503    2.982    1.449    1.947 \n     .25      .50      .75      .90      .95 \n   3.310    5.510    7.723    9.144    9.537 \n\nlowest : 1.00308 1.00551 1.00777 1.00809 1.01178\nhighest: 9.98825 9.98867 9.98884 9.98949 9.99373\n\ndescribe(total_2024$more_accident)\n\ntotal_2024$more_accident \n       n  missing distinct \n    3330        0        2 \n                      \nValue         No   Yes\nFrequency    807  2523\nProportion 0.242 0.758\n\nmean_duration_by_accident &lt;- aggregate(total_2024$duration, by=list(more_accident=total_2024$more_accident), FUN=mean)\nmean_duration_by_accident #check crude association\n\n  more_accident        x\n1            No 149.5698\n2           Yes 154.0241\n\n\nSplit the data into a 75% train set and a 25% test set\n\n#create a subset that contains variables for analysis\ndata_analysis&lt;-total_2024 %&gt;%\n  mutate(state=as.factor(state), more_accident=as.factor(more_accident))  %&gt;%\n  select(state, duration, more_accident, traffic)\n\n#splits the dataset randomly into a 75% train and 25% test set\ndata_split &lt;- initial_split(data_analysis, prop = 3/4)\ntrain_data &lt;- training(data_split)\ntest_data  &lt;- testing(data_split)\n\n\n\n4.Fit 3 different model types to the data using the tidymodels framework.\nLogistic regression, Random forests, and K-nearest neighbors will be fit to the data.\n\n#Fit logistic regression with 10-fold cross-validation\n\n#model specification\nlogistic_spec &lt;- logistic_reg() %&gt;%\n  set_engine(\"glm\") %&gt;%\n  set_mode(\"classification\")\n\n#define cross-validation\nset.seed(rngseed)\ncv_folds &lt;- vfold_cv(train_data, v = 10)\n\n#workflow creation\nlogistic_workflow &lt;- workflow() %&gt;%\n  add_formula(more_accident~duration+state+traffic) %&gt;%\n  add_model(logistic_spec)\n\n#model fitting and evaluation\nset.seed(rngseed)\nfit_logistic &lt;- fit_resamples(\n  logistic_workflow,\n  cv_folds,\n  control = control_resamples(save_pred = TRUE)\n)\n\n# print results (Accuracy and AUC)\nresults_logistic &lt;- collect_metrics(fit_logistic)\nprint(results_logistic)\n\n# A tibble: 2 × 6\n  .metric  .estimator  mean     n std_err .config             \n  &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary     0.924    10 0.00225 Preprocessor1_Model1\n2 roc_auc  binary     0.970    10 0.00212 Preprocessor1_Model1\n\n\nWith 10-fold cross-validation, a logistic regression model generates an accuracy of 92.35%, and an AUC of 0.9696.\n\n#Fit random forest with 10-fold cross-validation\n\n#random Forest model specification\nrf_spec &lt;- rand_forest(trees = 100) %&gt;%  # using 100 trees\n  set_engine(\"ranger\") %&gt;%\n  set_mode(\"classification\")\n\n#workflow creation\nrf_workflow &lt;- workflow() %&gt;%\n  add_formula(more_accident ~duration+state+traffic) %&gt;%\n  add_model(rf_spec)\n\n#model fitting and evaluation\nset.seed(rngseed)\nfit_rf &lt;- fit_resamples(\n  rf_workflow,\n  cv_folds,\n  control = control_resamples(save_pred = TRUE)\n)\n\n#print the results(accuracy and AUC)\nresults_rf &lt;- collect_metrics(fit_rf)\nprint(results_rf)\n\n# A tibble: 2 × 6\n  .metric  .estimator  mean     n  std_err .config             \n  &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;    &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary      1.00    10 0.000400 Preprocessor1_Model1\n2 roc_auc  binary      1       10 0        Preprocessor1_Model1\n\n\nWith 10-fold cross-validation, a random forest model with 100 trees generates an accuracy of 99.96%, and an AUC of 1.\n\n#specify the KNN model \nknn_spec &lt;- nearest_neighbor(neighbors = 10) %&gt;%  # using 10 neighbors\n  set_engine(\"kknn\") %&gt;%\n  set_mode(\"classification\")\n\n#create a recipe for pre-processing\nrecipe_knn &lt;- recipe(more_accident ~ state + duration + traffic, data = train_data) %&gt;%\n  step_dummy(all_nominal(), -all_outcomes()) %&gt;%  # handle categorical data\n  step_normalize(all_predictors())  # scale numeric predictors\n\n#workflow creation\nknn_workflow &lt;- workflow() %&gt;%\n  add_recipe(recipe_knn) %&gt;%\n  add_model(knn_spec)\n\n#model fitting and evaluation\nset.seed(rngseed)\nfit_knn &lt;- fit_resamples(\n  knn_workflow,\n  cv_folds,\n  control = control_resamples(save_pred = TRUE)\n)\n\n#print the results(accuracy and AUC)\nresults_knn &lt;- collect_metrics(fit_knn)\nprint(results_knn)\n\n# A tibble: 2 × 6\n  .metric  .estimator  mean     n std_err .config             \n  &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary     0.988    10 0.00249 Preprocessor1_Model1\n2 roc_auc  binary     0.997    10 0.00185 Preprocessor1_Model1\n\n\nWith 10-fold cross-validation, a KNN model with 10 neighbors generates an accuracy of 98.76%, and an AUC of 0.9974.\n\n\n5. Decide on the final model\nAll the three models have satisfying predictive power, as they all yield accuracy&gt;90% and AUC&gt;0.9. Although random forest and KNN models have slightly better performance, the logistic model is selected as the final model. This is because the main purpose of this analysis is to understand the relationship between the risk of having more traffic accidents than usual and the eclipse duration. The results for the logistic regression are much easier to interpret and understand than the other two models.\n\n\n6. Evaluate the model performance on the test data\nFit logistic regression model to the entire train data and then fit the model to the test data to evaluate performance.\n\n#fit the logistic model to the entire train data using the previous workflow\nlogistic_final_fit &lt;- fit(logistic_workflow, data = train_data)\n\n#display model coefficients\ntidy(logistic_final_fit)\n\n# A tibble: 16 × 5\n   term         estimate std.error statistic  p.value\n   &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 (Intercept) -125.       16.2      -7.76   8.29e-15\n 2 duration       0.902     0.105     8.60   8.05e-18\n 3 stateIL        2.78      0.518     5.37   7.78e- 8\n 4 stateIN        4.05      0.606     6.68   2.38e-11\n 5 stateKY        2.41      0.753     3.20   1.39e- 3\n 6 stateME        7.55      1.98      3.82   1.34e- 4\n 7 stateMI       -2.64      4.88     -0.540  5.89e- 1\n 8 stateMO        1.82      0.561     3.25   1.17e- 3\n 9 stateNH        9.86      8.41      1.17   2.41e- 1\n10 stateNY        2.48      1.17      2.11   3.45e- 2\n11 stateOH        2.70      0.738     3.65   2.59e- 4\n12 stateOK       -0.446     0.745    -0.599  5.49e- 1\n13 statePA        0.0414    1.04      0.0398 9.68e- 1\n14 stateTX       -1.95      0.430    -4.53   5.93e- 6\n15 stateVT        4.70      1.54      3.05   2.27e- 3\n16 traffic       -1.79      0.0958  -18.7    6.09e-78\n\n\n\n#fit the model to the test data\ntest_predictions &lt;- predict(logistic_final_fit, new_data = test_data, type = \"class\")\n\n#calculate accuracy\ntest_data$predicted &lt;- test_predictions$.pred_class\nTest_accuracy &lt;- accuracy(data = test_data, truth = more_accident, estimate = predicted)\nprint(Test_accuracy)\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.918\n\n#confusion matrix table\nconf_mat(test_data, truth = more_accident, estimate = predicted)\n\n          Truth\nPrediction  No Yes\n       No  163  28\n       Yes  40 602\n\n\n\n\n7. Summary\nIn the final logistic regression model, 1 min increase in the eclipse duration is associated with 2.46 times increase in the odds of having more traffic accidents than usual among the US cities on the path of 2024 totality eclipse (OR=2.46, 95% CI=2.01-3.04, P-value&lt;.001). The model has an accuracy of 91.8% after being applied to the test data. These results are expected, as we assigned higher proportion of ‘Yes’ for cities with eclipse duration &gt; 150 mins when the outcome variable was synthesized.\n\n#display model summary (Odds ratios)\ntbl_regression(logistic_final_fit, exponentiate = TRUE)\n\nTo take full advantage of model formatting, e.g. grouping categorical variables,\nplease add the following argument to the `workflows::add_model()` call:\n`blueprint = hardhat::default_formula_blueprint(indicators = 'none')` \n\n\nExtracting {workflows} model fit with `workflows::extract_fit_parsnip(x) %&gt;% tbl_regression(...)`\n\n\nExtracting {parsnip} model fit with `tbl_regression(x = x$fit, ...)`\n\n\n\n\n\n\n\n\nCharacteristic\nOR1\n95% CI1\np-value\n\n\n\n\nduration\n2.46\n2.01, 3.04\n&lt;0.001\n\n\nstateIL\n16.2\n5.93, 45.4\n&lt;0.001\n\n\nstateIN\n57.2\n17.7, 191\n&lt;0.001\n\n\nstateKY\n11.1\n2.66, 53.0\n0.001\n\n\nstateME\n1,898\n40.8, 95,720\n&lt;0.001\n\n\nstateMI\n0.07\n0.00, 16.1\n0.6\n\n\nstateMO\n6.17\n2.11, 19.1\n0.001\n\n\nstateNH\n19,097\n12.7, 48,409,140\n0.2\n\n\nstateNY\n12.0\n1.21, 121\n0.034\n\n\nstateOH\n14.8\n3.53, 63.8\n&lt;0.001\n\n\nstateOK\n0.64\n0.15, 2.97\n0.5\n\n\nstatePA\n1.04\n0.14, 8.01\n&gt;0.9\n\n\nstateTX\n0.14\n0.06, 0.33\n&lt;0.001\n\n\nstateVT\n110\n5.45, 2,295\n0.002\n\n\ntraffic\n0.17\n0.14, 0.20\n&lt;0.001\n\n\n\n1 OR = Odds Ratio, CI = Confidence Interval"
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Chaohua Li Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "Liza Hall contributed to this exercise.\nThe structure below is one possible setup for a data analysis project (including the course project). For a manuscript, adjust as needed. You don’t need to have exactly these sections, but the content covering those sections should be addressed.\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.1 General Background Information",
    "text": "2.1 General Background Information\nProvide enough background on your topic that others can understand the why and how of your analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.2 Description of data and data source",
    "text": "2.2 Description of data and data source\nDescribe what the data is, what it contains, where it is from, etc. Eventually this might be part of a methods section."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.3 Questions/Hypotheses to be addressed",
    "text": "2.3 Questions/Hypotheses to be addressed\nState the research questions you plan to answer with this analysis.\nTo cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above (here dataanalysis_template_references.bib) and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, Shen, & Handel, 2020)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.2 Data import and cleaning",
    "text": "3.2 Data import and cleaning\nWrite code that reads in the file and cleans it so it’s ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.3 Statistical analysis",
    "text": "3.3 Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\nUse a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project.\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\ncharacter.min\ncharacter.max\ncharacter.empty\ncharacter.n_unique\ncharacter.whitespace\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\ncharacter\nEye\n0\n1\n4\n5\n0\n4\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nfactor\nGender\n0\n1\nNA\nNA\nNA\nNA\nNA\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n165.66667\n15.97655\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nnumeric\nAge\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n33.33333\n17.62810\n16\n23\n24\n45\n67\n▇▂▂▂▂"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid.\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 1: Height and weight stratified by gender.\n\n\n\n\n\nFigure 2 shows a boxplot produced by one of the R scripts. This plot illustrates the distribution of height for people of different eye colors. In general, people of different eye colors have different distributions in height. People of black eyes have the highest median height, and people of brown eyes have the lowest median height.\n\n\n\n\n\n\n\n\nFigure 2: Height by Eye Color\n\n\n\n\n\nFigure 3 shows a scatterplot produced by one of the R scripts. This plot illustrates the correlation between weight and age. In general, we observed a linear relationship between weight and age, with a higher weight associated with a higher age.\n\n\n\n\n\n\n\n\nFigure 3: Weight and Age"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.3 Full analysis",
    "text": "4.3 Full analysis\nUse one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here.\nExample Table 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n149.2726967\n23.3823360\n6.3839942\n0.0013962\n\n\nWeight\n0.2623972\n0.3512436\n0.7470519\n0.4886517\n\n\nGenderM\n-2.1244913\n15.5488953\n-0.1366329\n0.8966520\n\n\nGenderO\n-4.7644739\n19.0114155\n-0.2506112\n0.8120871\n\n\n\n\n\n\n\n\n\nExample Table 3 shows a summary of a linear model fit using height as outcome and age and eye color as predictors. Coefficient estimates, standard errors, test statistics and p-values are presented. One additional year in age is significantly associated with a decrease of 0.834 cm in height (P-value=0.006). Compared to people with black eyes, people of brown eyes are averagely 23.052 cm shorter (P-value=0.007).\n\n\n\n\nTable 3: Linear model fit table: Height= Age + Eye Color.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n199.6310606\n5.2410799\n38.089681\n0.0000028\n\n\nAge\n-0.8340909\n0.1591457\n-5.241053\n0.0063357\n\n\nEyeblue\n-4.2742424\n5.0315101\n-0.849495\n0.4434597\n\n\nEyebrown\n-23.0522727\n4.5041323\n-5.118028\n0.0068956\n\n\nEyeother\n22.2530303\n9.0282358\n2.464826\n0.0693309"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nSummarize what you did, what you found and what it means."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.3 Conclusions",
    "text": "5.3 Conclusions\nWhat are the main take-home messages?\nInclude citations in your Rmd file using bibtex, the list of references will automatically be placed at the end\nThis paper (Leek & Peng, 2015) discusses types of analyses.\nThese papers (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, et al., 2020) are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Chaohua Li Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Chaohua Li Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at C:/Users/chaoh/Desktop/UGA Courses/4_Spring 2024/EPID 8060E/MADA/chaohuali-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Chaohua Li Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at C:/Users/chaoh/Desktop/UGA Courses/4_Spring 2024/EPID 8060E/MADA/chaohuali-MADA-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          3     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  2     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Presentation Exercise",
    "section": "",
    "text": "The graph that I select to reproduce is from USA Facts (https://usafacts.org/topics/health/#what-is-the-life-expectancy-of-someone-born-today-in-the-us). The original graph shows the trends of life expectancy at birth for males, females and both sexes in the US from 1980 to 2022. Under the graph I found the link to the data of the graph which is provided by National Vital Statistics System. The data can be downloaded here (https://www.cdc.gov/nchs/hus/data-finder.htm?year=2020-2021&table=Table%20LExpMort). I copied the data for the graph only and save it to a csv file in the project folder."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#data-source",
    "href": "presentation-exercise/presentation-exercise.html#data-source",
    "title": "Presentation Exercise",
    "section": "",
    "text": "The graph that I select to reproduce is from USA Facts (https://usafacts.org/topics/health/#what-is-the-life-expectancy-of-someone-born-today-in-the-us). The original graph shows the trends of life expectancy at birth for males, females and both sexes in the US from 1980 to 2022. Under the graph I found the link to the data of the graph which is provided by National Vital Statistics System. The data can be downloaded here (https://www.cdc.gov/nchs/hus/data-finder.htm?year=2020-2021&table=Table%20LExpMort). I copied the data for the graph only and save it to a csv file in the project folder."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#load-packages-and-data",
    "href": "presentation-exercise/presentation-exercise.html#load-packages-and-data",
    "title": "Presentation Exercise",
    "section": "Load packages and data",
    "text": "Load packages and data\n\n#load packages\nlibrary(\"here\")\n\nhere() starts at C:/Users/chaoh/Desktop/UGA Courses/4_Spring 2024/EPID 8060E/MADA/chaohuali-MADA-portfolio\n\nlibrary(\"tidyverse\")\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(\"knitr\")\nlibrary(\"ggplot2\")\nlibrary(\"gt\")\n\n#read csv data\nlife_exp &lt;- read.csv(here(\"presentation-exercise\", \"life_expectancy.csv\"))\n\n#preview dataset\ndplyr::glimpse(life_exp) \n\nRows: 43\nColumns: 4\n$ year       &lt;int&gt; 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,…\n$ both_sexes &lt;dbl&gt; 73.7, 74.1, 74.5, 74.6, 74.7, 74.7, 74.7, 74.9, 74.9, 75.1,…\n$ male       &lt;dbl&gt; 70.0, 70.4, 70.8, 71.0, 71.1, 71.1, 71.2, 71.4, 71.4, 71.7,…\n$ female     &lt;dbl&gt; 77.4, 77.8, 78.1, 78.1, 78.2, 78.2, 78.2, 78.3, 78.3, 78.5,…"
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#use-chatgpt-to-create-r-codes-for-the-graph",
    "href": "presentation-exercise/presentation-exercise.html#use-chatgpt-to-create-r-codes-for-the-graph",
    "title": "Presentation Exercise",
    "section": "Use ChatGPT to create R codes for the graph",
    "text": "Use ChatGPT to create R codes for the graph\nBecause the data for the graph is relatively clean and simple, I directly feed the data to ChatGPT. Then I describe the structure of the dataset to ChatGPT and specify what the graph should look like. I have copied the prompt below.\n” This dataset has 5 variables. Both_sexes, male, and female are the variables that contain life expectancy for both sexes, males, and females, respectively. Use this dataset to create a line plot using R codes. The line plot should show the trends of life expectancy for both sexes, males and females separately. year should be on the x axis, life expectancy on the y axis. On the x axis, there should be 5 ticks (1980, 1990, 2000, 2010, 2020). There should be 6 ticks on the y axis (70,72,74,76,78,80). There should be grids for the ticks. The line for female should be pink, the line for male should be dark blue, the line for both sexes should be green. ”\n\n# The codes below are generated by ChatGPT\n# Create the line plot\nggplot(life_exp, aes(x = year)) +\n  geom_line(aes(y = both_sexes, color = \"Both Sexes\"), size = 1) +\n  geom_line(aes(y = male, color = \"Male\"), size = 1) +\n  geom_line(aes(y = female, color = \"Female\"), size = 1) +\n  scale_x_continuous(breaks = c(1980, 1990, 2000, 2010, 2020), minor_breaks = NULL) +\n  scale_y_continuous(breaks = c(70, 72, 74, 76, 78, 80), minor_breaks = NULL) +\n  labs(title = \"Life Expectancy Trends\",\n       x = \"Year\",\n       y = \"Life Expectancy\") +\n  theme_minimal() +\n  theme(panel.grid.major = element_line(colour = \"gray\", linetype = \"dashed\"),\n        panel.grid.minor = element_blank(),\n        legend.position = \"top\",\n        legend.title = element_blank()) +\n  scale_color_manual(values = c(\"darkblue\", \"pink\", \"green\"))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nChatGPT did a really good job for this very first prompt. But the colors didn’t look right. I had to manually change the line colors, the title, thickness of the line, legend labels, grid types, and remove x/y-axis title so that the graph looks more like the original one.\n\n# Manually tuned graph\nggplot(life_exp, aes(x = year)) +\n  geom_line(aes(y = both_sexes, color = \"Life expectancy at birth\"), size = 3) +\n  geom_line(aes(y = male, color = \"Male\"), size = 1.5) +\n  geom_line(aes(y = female, color = \"Female\"), size = 1.5) +\n  geom_point(data = life_exp %&gt;% filter(year == max(life_exp$year)),\n             aes(y = both_sexes), color = \"forestgreen\", size = 4, shape = 19) +\n  geom_point(data = life_exp %&gt;% filter(year == max(life_exp$year)),\n             aes(y = male), color = \"darkblue\", size = 4, shape = 19) +\n  geom_point(data = life_exp %&gt;% filter(year == max(life_exp$year)),\n             aes(y = female), color = \"deeppink\", size = 4, shape = 19) +\n  scale_x_continuous(breaks = c(1980, 1990, 2000, 2010, 2020), minor_breaks = NULL) +\n  scale_y_continuous(breaks = c(70, 72, 74, 76, 78, 80), minor_breaks = NULL) +\n  labs(title = \"Life expectancy at birth\",\n       subtitle = \"In 2022, a newborn in the US was expected to live 77.5 years\",\n       x = \"\",\n       y = \"\") +\n  theme_minimal() +\n  theme(panel.grid.major = element_line(colour = \"gray\", linetype = 1),\n        panel.grid.minor = element_blank(),\n        legend.position='top', \n        legend.justification='left',\n        legend.direction='horizontal',\n        legend.title = element_blank()) +\n  scale_color_manual(values = c(\"deeppink\",\"forestgreen\",\"darkblue\" ))\n\n\n\n\n\n\n\n\nNow the reproduced graph looks very much like the original one. For comparison, the original graph is attached below."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#create-a-publication-quality-table",
    "href": "presentation-exercise/presentation-exercise.html#create-a-publication-quality-table",
    "title": "Presentation Exercise",
    "section": "Create a publication quality table",
    "text": "Create a publication quality table\nThe dataset itself is the content that I want to present, so there is no need to make a summary of the numbers. I asked ChatGPT to create a table of publication quality using the gt() package. After manually tuning the main title and column titles, the table looked satisfying.\n\n# Create a gt table\ntable1 &lt;- life_exp %&gt;%\n  gt() %&gt;%\n  cols_label(\n    year=\"Year\",\n    both_sexes=\"Both Sexes\",\n    male=\"Male\",\n    female=\"Female\"\n  ) %&gt;%\n  tab_spanner(\n    label = \"Life expectancy (years)\",\n    columns = c(both_sexes, male, female),\n  ) %&gt;%\n  tab_header(\n    title = \"Life expectancy at birth in the U.S. by sex, 1980-2022\",\n  ) \n\n# Print the table\ntable1\n\n\n\n\n\n\n\nLife expectancy at birth in the U.S. by sex, 1980-2022\n\n\nYear\nLife expectancy (years)\n\n\nBoth Sexes\nMale\nFemale\n\n\n\n\n1980\n73.7\n70.0\n77.4\n\n\n1981\n74.1\n70.4\n77.8\n\n\n1982\n74.5\n70.8\n78.1\n\n\n1983\n74.6\n71.0\n78.1\n\n\n1984\n74.7\n71.1\n78.2\n\n\n1985\n74.7\n71.1\n78.2\n\n\n1986\n74.7\n71.2\n78.2\n\n\n1987\n74.9\n71.4\n78.3\n\n\n1988\n74.9\n71.4\n78.3\n\n\n1989\n75.1\n71.7\n78.5\n\n\n1990\n75.4\n71.8\n78.8\n\n\n1991\n75.5\n72.0\n78.9\n\n\n1992\n75.8\n72.3\n79.1\n\n\n1993\n75.5\n72.2\n78.8\n\n\n1994\n75.7\n72.4\n79.0\n\n\n1995\n75.8\n72.5\n78.9\n\n\n1996\n76.1\n73.1\n79.1\n\n\n1997\n76.5\n73.6\n79.4\n\n\n1998\n76.7\n73.8\n79.5\n\n\n1999\n76.7\n73.9\n79.4\n\n\n2000\n76.8\n74.1\n79.3\n\n\n2001\n77.0\n74.3\n79.5\n\n\n2002\n77.0\n74.4\n79.6\n\n\n2003\n77.2\n74.5\n79.7\n\n\n2004\n77.6\n75.0\n80.1\n\n\n2005\n77.6\n75.0\n80.1\n\n\n2006\n77.8\n75.2\n80.3\n\n\n2007\n78.1\n75.5\n80.6\n\n\n2008\n78.2\n75.6\n80.6\n\n\n2009\n78.5\n76.0\n80.9\n\n\n2010\n78.7\n76.3\n81.0\n\n\n2011\n78.7\n76.3\n81.1\n\n\n2012\n78.8\n76.4\n81.2\n\n\n2013\n78.8\n76.4\n81.2\n\n\n2014\n78.9\n76.5\n81.3\n\n\n2015\n78.7\n76.3\n81.1\n\n\n2016\n78.7\n76.2\n81.1\n\n\n2017\n78.6\n76.1\n81.1\n\n\n2018\n78.7\n76.2\n81.2\n\n\n2019\n78.8\n76.3\n81.4\n\n\n2020\n77.3\n74.5\n79.9\n\n\n2021\n76.4\n73.5\n79.3\n\n\n2022\n77.5\n74.5\n80.2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Chaohua’s website and data analysis portfolio",
    "section": "",
    "text": "Hello\n\nWelcome to my portfolio!\n\n\n\n\n\nI’m a second-year PhD student in Epidemiology. You can find information about me and my works for the course EPID8060E on this site.\n\nPlease use the Menu Bar above to look around.\nHave fun!\n\nFeel free to contact me at cl77628@uga.edu"
  },
  {
    "objectID": "data-exercise/data-exercise.html",
    "href": "data-exercise/data-exercise.html",
    "title": "Data Exercise (Week 4)",
    "section": "",
    "text": "In this exercise, I chose the “stars” dataset from the “dslabs” package and selected stars in the spectral classes of A/B/K/M. Based on selected data, I generated a synthetic dataset which contained name, absolute magnitude, surface temperature, and the spectral class of the star. With the synthetic data, I examined the relationships between the variables."
  },
  {
    "objectID": "data-exercise/data-exercise.html#load-packages-and-data",
    "href": "data-exercise/data-exercise.html#load-packages-and-data",
    "title": "Data Exercise (Week 4)",
    "section": "Load packages and data",
    "text": "Load packages and data\n\n#Load packages \nlibrary(\"dslabs\")\nlibrary(\"tidyverse\")\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(\"gtsummary\")\nlibrary(\"parsnip\")\nlibrary(\"broom\")\n\ntable(stars$type)\n\n\n A  B DA DB DF  F  G  K  M  O \n13 19  2  1  1  7  4 16 32  1 \n\n#Create dataset star_1 that contains stars from spectral classes of A/B/K/M, as only these classes have more than 10 stars, and change type into a factor variable\nstar_1  &lt;- \n  stars %&gt;% \n    filter(type %in% c(\"A\",\"B\",\"K\",\"M\")) %&gt;%\n      mutate(type=factor(type) )\n#preview star_1\ndplyr::glimpse(star_1) \n\nRows: 80\nColumns: 4\n$ star      &lt;fct&gt; SiriusA, Arcturus, Vega, Rigel, Betelgeuse, Achemar, Hadar, …\n$ magnitude &lt;dbl&gt; 1.4, -0.4, 0.5, -7.2, -5.7, -2.4, -5.3, 2.2, -0.8, -3.4, -5.…\n$ temp      &lt;int&gt; 9620, 4590, 9900, 12140, 3200, 20500, 25500, 8060, 4130, 255…\n$ type      &lt;fct&gt; A, K, A, B, M, B, B, A, K, B, M, A, K, A, B, B, B, B, B, B, …\n\n\nNow we have an original dataset that contains 80 stars from the spectral classes of A/B/K/M. We will create synthetic data based on this."
  },
  {
    "objectID": "data-exercise/data-exercise.html#explore-the-original-data-before-simulation",
    "href": "data-exercise/data-exercise.html#explore-the-original-data-before-simulation",
    "title": "Data Exercise (Week 4)",
    "section": "Explore the original data before simulation",
    "text": "Explore the original data before simulation\nWe need to get some descriptive statistics and examine relationships between variables in the original data.\n\n#Get descriptive statistics of variables\ngtsummary::tbl_summary(star_1[,c(\"magnitude\",\"temp\",\"type\")], statistic = list(\n  all_continuous() ~ \"{mean}/{median}/{min}/{max}/{sd}\",\n  all_categorical() ~ \"{n} / {N} ({p}%)\"\n),)\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN = 801\n\n\n\n\nmagnitude\n5/2/-7/17/7\n\n\ntemp\n8,616/4,590/2,500/28,000/7,897\n\n\ntype\n\n\n\n\n    A\n13 / 80 (16%)\n\n\n    B\n19 / 80 (24%)\n\n\n    K\n16 / 80 (20%)\n\n\n    M\n32 / 80 (40%)\n\n\n\n1 Mean/Median/Minimum/Maximum/SD; n / N (%)\n\n\n\n\n\n\n\n#Histograms of magnitude\nhist(star_1$magnitude)\n\n\n\n\n\n\n\n#Histograms of log(temperature)\nhist(log(star_1$temp))\n\n\n\n\n\n\n\n#Scatterplot: magnitude ~ log(temperature)  \nggplot(star_1, aes(log(temp), magnitude)) + \n  geom_point()\n\n\n\n\n\n\n\n#Boxplot: magnitude ~ type  \nggplot(star_1, aes(type, magnitude)) + \n  geom_boxplot()\n\n\n\n\n\n\n\n#Get mean and std of magnitude by type\nstar_1 %&gt;%\n  group_by(type) %&gt;%\n  summarise_at(vars(magnitude), list(name = mean,sd))\n\n# A tibble: 4 × 3\n  type    name   fn1\n  &lt;fct&gt;  &lt;dbl&gt; &lt;dbl&gt;\n1 A      0.362  2.43\n2 B     -3.53   1.92\n3 K      4.16   3.77\n4 M     11.5    5.40\n\n\nStars of type M have largest mean magnitude, while type B stars have the lowest magnitude. We will recreate this correlation in the synthetic data."
  },
  {
    "objectID": "data-exercise/data-exercise.html#create-synthetic-data",
    "href": "data-exercise/data-exercise.html#create-synthetic-data",
    "title": "Data Exercise (Week 4)",
    "section": "Create synthetic data",
    "text": "Create synthetic data\nWe will create synthetic data “star_s” based on the existing data “star_1”. Particularly, we will retain the correlation between magnitude and type.\n\n# Set a seed for reproducibility\nset.seed(456)\n# Define the number of observations (stars) to generate\nn_stars &lt;- 80\n# Create an empty data frame \nstar_s &lt;- data.frame(\n  starID = numeric(n_stars),\n  magnitude = numeric(n_stars),\n  type = character(n_stars),\n  logtemp = numeric(n_stars)\n)\n\n# 1. generate star ID\nstar_s$starID &lt;- 1:n_stars\n\n# 2. generate log(temperature)\n# use uniform distribution as indicated by histogram of real data\n# use same min and max values as real data\nstar_s$logtemp &lt;- round(runif(n_stars, \n                                     min = min(log(star_1$temp)), \n                                     max = max(log(star_1$temp))), 1)\n\n# 3. generate type\n# create with probabilities based on real data distribution\nstar_s$type &lt;- sample(c(\"A\", \"B\", \"K\",\"M\"), \n                                 n_stars, \n                                 replace = TRUE,\n                                 prob = as.numeric(table(star_1$type)/100))\n\n# 4. generate magnitude\n# recreate the correlation between magnitude and type\nstar_s$magnitude[star_s$type == \"A\"] &lt;- round(rnorm(sum(star_s$type == \"A\"), mean = mean(star_1$magnitude[star_1$type == \"A\"]), sd = sd(star_1$magnitude[star_1$type == \"A\"])), 3)\n\nstar_s$magnitude[star_s$type == \"B\"] &lt;- round(rnorm(sum(star_s$type == \"B\"), mean = mean(star_1$magnitude[star_1$type == \"B\"]), sd = sd(star_1$magnitude[star_1$type == \"B\"])), 3)\n\nstar_s$magnitude[star_s$type == \"K\"] &lt;- round(rnorm(sum(star_s$type == \"K\"), mean = mean(star_1$magnitude[star_1$type == \"K\"]), sd = sd(star_1$magnitude[star_1$type == \"K\"])), 3)\n\nstar_s$magnitude[star_s$type == \"M\"] &lt;- round(rnorm(sum(star_s$type == \"M\"), mean = mean(star_1$magnitude[star_1$type == \"M\"]), sd = sd(star_1$magnitude[star_1$type == \"M\"])), 3)"
  },
  {
    "objectID": "data-exercise/data-exercise.html#check-the-synthetic-data",
    "href": "data-exercise/data-exercise.html#check-the-synthetic-data",
    "title": "Data Exercise (Week 4)",
    "section": "Check the synthetic data",
    "text": "Check the synthetic data\n\n#Preview synthetic data\nhead(star_s)\n\n  starID magnitude type logtemp\n1      1    -3.686    B     8.0\n2      2    -1.974    B     8.3\n3      3     7.228    K     9.6\n4      4    -2.258    A     9.9\n5      5    -2.565    B     9.7\n6      6     7.863    K     8.6\n\nsummary(star_s)\n\n     starID        magnitude          type              logtemp      \n Min.   : 1.00   Min.   :-6.766   Length:80          Min.   : 7.800  \n 1st Qu.:20.75   1st Qu.:-1.528   Class :character   1st Qu.: 8.500  \n Median :40.50   Median : 2.488   Mode  :character   Median : 9.000  \n Mean   :40.50   Mean   : 3.444                      Mean   : 9.050  \n 3rd Qu.:60.25   3rd Qu.: 7.309                      3rd Qu.: 9.625  \n Max.   :80.00   Max.   :19.699                      Max.   :10.200  \n\ndplyr::glimpse(star_s) \n\nRows: 80\nColumns: 4\n$ starID    &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1…\n$ magnitude &lt;dbl&gt; -3.686, -1.974, 7.228, -2.258, -2.565, 7.863, -1.371, -3.861…\n$ type      &lt;chr&gt; \"B\", \"B\", \"K\", \"A\", \"B\", \"K\", \"B\", \"B\", \"A\", \"K\", \"B\", \"K\", …\n$ logtemp   &lt;dbl&gt; 8.0, 8.3, 9.6, 9.9, 9.7, 8.6, 8.0, 8.5, 8.4, 8.8, 8.7, 8.4, …\n\n#Histograms of magnitude\nhist(star_s$magnitude)\n\n\n\n\n\n\n\n#Histograms of log(temperature)\nhist(star_s$logtemp)\n\n\n\n\n\n\n\n#Boxplot: magnitude ~ type  \nggplot(star_s, aes(type, magnitude)) + \n  geom_boxplot()\n\n\n\n\n\n\n\n#Get mean and std of magnitude by type\nstar_s %&gt;%\n  group_by(type) %&gt;%\n  summarise_at(vars(magnitude), list(name = mean,sd))\n\n# A tibble: 4 × 3\n  type    name   fn1\n  &lt;chr&gt;  &lt;dbl&gt; &lt;dbl&gt;\n1 A      0.746  2.47\n2 B     -3.67   1.53\n3 K      3.59   3.67\n4 M     11.3    5.59\n\n\nWe can confirm that correlation between magnitude and type has been recreated in the synthetic data."
  },
  {
    "objectID": "data-exercise/data-exercise.html#fit-linear-model-with-the-synthetic-data",
    "href": "data-exercise/data-exercise.html#fit-linear-model-with-the-synthetic-data",
    "title": "Data Exercise (Week 4)",
    "section": "Fit linear model with the synthetic data",
    "text": "Fit linear model with the synthetic data\nFit a linear model to see whether the model recover the correlation between magnitude and type of the stars. Model: magnitude = type + logtemp\n\n# Fit linear model \nmodel &lt;- linear_reg() %&gt;%\n  set_engine(\"lm\") %&gt;%\n  parsnip::fit(magnitude ~ type + logtemp, data = star_s)\nbroom::tidy(model)\n\n# A tibble: 5 × 5\n  term        estimate std.error statistic  p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)   -2.60      5.83     -0.445 6.57e- 1\n2 typeB         -4.27      1.34     -3.18  2.13e- 3\n3 typeK          2.87      1.26      2.28  2.53e- 2\n4 typeM         10.6       1.29      8.24  4.17e-12\n5 logtemp        0.362     0.622     0.582 5.63e- 1\n\nbroom::glance(model)\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic  p.value    df logLik   AIC   BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     0.690         0.673  3.81      41.7 2.36e-18     4  -218.  448.  462.\n# ℹ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;\n\n\nBased on the results above, we can tell the linear model perfectly recovers the correlation between magnitude and type in the synthetic data."
  },
  {
    "objectID": "data-exercise/data-exercise.html#fit-another-linear-model-with-interaction-between-type-and-logtemperature",
    "href": "data-exercise/data-exercise.html#fit-another-linear-model-with-interaction-between-type-and-logtemperature",
    "title": "Data Exercise (Week 4)",
    "section": "Fit another linear model with interaction between type and log(temperature)",
    "text": "Fit another linear model with interaction between type and log(temperature)\nModel: magnitude = type + logtemp + type*logtemp\n\n# Fit linear model \nmodel2 &lt;- linear_reg() %&gt;%\n  set_engine(\"lm\") %&gt;%\n  parsnip::fit(magnitude ~ type + logtemp + type*logtemp, data = star_s)\nbroom::tidy(model2)\n\n# A tibble: 8 × 5\n  term          estimate std.error statistic p.value\n  &lt;chr&gt;            &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 (Intercept)     -7.95      13.4     -0.592   0.556\n2 typeB            7.92      18.7      0.423   0.673\n3 typeK           15.0       17.1      0.877   0.384\n4 typeM            9.03      16.7      0.542   0.590\n5 logtemp          0.941      1.45     0.649   0.518\n6 typeB:logtemp   -1.35       2.07    -0.655   0.515\n7 typeK:logtemp   -1.31       1.85    -0.712   0.479\n8 typeM:logtemp    0.198      1.82     0.109   0.913\n\nbroom::glance(model2)\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic  p.value    df logLik   AIC   BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     0.695         0.666  3.86      23.5 2.85e-16     7  -217.  453.  474.\n# ℹ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;\n\n\nThere is no significant interaction between magnitude and type. The model fit also drops a little. Thus, interaction term is not necessary."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html",
    "href": "cdcdata-exercise/cdcdata-exercise.html",
    "title": "CDC Data Exercise (Week 5)",
    "section": "",
    "text": "The dataset of “Vaccine Hesitancy for COVID-19: County and local estimates” from https://data.cdc.gov/ was used for this exercise. This dataset contains estimates of percentage of adults who had vaccine hesitancy, Social Vulnerability Index, and percentages of different races for all US counties. Because the complete dataset is over 150MB, I queried and exported the data for only the counties in Georgia. Details of the data can be found here."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#load-packages-and-data",
    "href": "cdcdata-exercise/cdcdata-exercise.html#load-packages-and-data",
    "title": "CDC Data Exercise (Week 5)",
    "section": "Load packages and data",
    "text": "Load packages and data\n\n#Load packages \nlibrary(\"readr\")\nlibrary(\"here\")\n\nhere() starts at C:/Users/chaoh/Desktop/UGA Courses/4_Spring 2024/EPID 8060E/MADA/chaohuali-MADA-portfolio\n\nlibrary(\"Hmisc\")\n\n\nAttaching package: 'Hmisc'\n\n\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n\nlibrary(\"tidyverse\")\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ purrr     1.0.2\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()    masks stats::filter()\n✖ dplyr::lag()       masks stats::lag()\n✖ dplyr::src()       masks Hmisc::src()\n✖ dplyr::summarize() masks Hmisc::summarize()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(\"gtsummary\")\nlibrary(\"knitr\")\n\n#read csv data\nvaccine &lt;- read.csv(here(\"cdcdata-exercise\", \"Vaccine_Hesitancy_for_COVID-19__County_and_local_estimates_20240206.csv\"))\n\n#preview dataset\ndplyr::glimpse(vaccine) \n\nRows: 159\nColumns: 23\n$ FIPS.Code                                                        &lt;int&gt; 13117…\n$ County.Name                                                      &lt;chr&gt; \"Fors…\n$ State                                                            &lt;chr&gt; \"GEOR…\n$ Estimated.hesitant                                               &lt;dbl&gt; 0.104…\n$ Estimated.hesitant.or.unsure                                     &lt;dbl&gt; 0.143…\n$ Estimated.strongly.hesitant                                      &lt;dbl&gt; 0.065…\n$ Social.Vulnerability.Index..SVI.                                 &lt;dbl&gt; 0.04,…\n$ SVI.Category                                                     &lt;chr&gt; \"Very…\n$ CVAC.level.of.concern.for.vaccination.rollout                    &lt;dbl&gt; 0.44,…\n$ CVAC.Level.Of.Concern                                            &lt;chr&gt; \"Mode…\n$ Percent.adults.fully.vaccinated.against.COVID.19..as.of.6.10.21. &lt;dbl&gt; 0.183…\n$ Percent.Hispanic                                                 &lt;dbl&gt; 0.095…\n$ Percent.non.Hispanic.American.Indian.Alaska.Native               &lt;dbl&gt; 0.001…\n$ Percent.non.Hispanic.Asian                                       &lt;dbl&gt; 0.129…\n$ Percent.non.Hispanic.Black                                       &lt;dbl&gt; 0.033…\n$ Percent.non.Hispanic.Native.Hawaiian.Pacific.Islander            &lt;dbl&gt; 0.000…\n$ Percent.non.Hispanic.White                                       &lt;dbl&gt; 0.717…\n$ Geographical.Point                                               &lt;chr&gt; \"POIN…\n$ State.Code                                                       &lt;chr&gt; \"GA\",…\n$ County.Boundary                                                  &lt;chr&gt; \"MULT…\n$ State.Boundary                                                   &lt;chr&gt; \"MULT…\n$ States                                                           &lt;int&gt; 31, 3…\n$ Counties                                                         &lt;int&gt; 1611,…\n\n#create a new dataset that contains only the variables of interest\nvaccine_2  &lt;- \n  vaccine %&gt;% \n    mutate(SVI.Category=factor(SVI.Category) ) %&gt;%\n    mutate(CVAC.Level.Of.Concern=factor(CVAC.Level.Of.Concern) ) %&gt;%\n    select(FIPS.Code, Estimated.hesitant, Percent.Hispanic, Percent.non.Hispanic.Black, Percent.non.Hispanic.Asian, SVI.Category , CVAC.Level.Of.Concern)\n\nNow, we have created a new dataset which includes only the variables of interest.\nFIPS.Code: id for counties\nEstimated.hesitant: Estimate of percentage of adults who describe themselves as “probably not” or “definitely not” going to get a COVID-19 vaccine once one is available to them, based on national survey data\nPercent.Hispanic: Percent of county population that is Hispanic\nPercent.non.Hispanic.Black: Percent of county population that is non-Hispanic Black\nPercent.non.Hispanic.Asian: Percent of county population that is non-Hispanic Asian\nSVI.Category: SVI categorized as follows: Very Low (0.0-0.19), Low (0.20-0.39); Moderate (0.40-0.59); High (0.60-0.79); Very High (0.80-1.0)\nCVAC.Level.Of.Concern: CVAC categorized as follows: Very Low (0.0-0.19), Low (0.20-0.39); Moderate (0.40-0.59); High (0.60-0.79); Very High (0.80-1.0)"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#explore-and-process-data",
    "href": "cdcdata-exercise/cdcdata-exercise.html#explore-and-process-data",
    "title": "CDC Data Exercise (Week 5)",
    "section": "Explore and process data",
    "text": "Explore and process data\n\n#inspect the summaries of the variables\ndescribe(vaccine_2)\n\nvaccine_2 \n\n 7  Variables      159  Observations\n--------------------------------------------------------------------------------\nFIPS.Code \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     159        0      159        1    13161      108    13017    13033 \n     .25      .50      .75      .90      .95 \n   13082    13161    13242    13289    13305 \n\nlowest : 13001 13003 13005 13007 13009, highest: 13313 13315 13317 13319 13321\n--------------------------------------------------------------------------------\nEstimated.hesitant \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     159        0       48    0.998   0.1618  0.01807   0.1363   0.1469 \n     .25      .50      .75      .90      .95 \n  0.1526   0.1623   0.1728   0.1864   0.1880 \n\nlowest : 0.1049 0.1085 0.1136 0.1178 0.1195, highest: 0.1747 0.1767 0.1784 0.1864 0.188 \n--------------------------------------------------------------------------------\nPercent.Hispanic \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     159        0      152        1  0.06489  0.05317  0.00803  0.01796 \n     .25      .50      .75      .90      .95 \n 0.03040  0.05050  0.08090  0.11848  0.15842 \n\nlowest : 0.0014 0.0028 0.0037 0.0043 0.0047, highest: 0.2117 0.2488 0.2728 0.2839 0.3511\n--------------------------------------------------------------------------------\nPercent.non.Hispanic.Black \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     159        0      158        1   0.2824   0.2014  0.01441  0.03316 \n     .25      .50      .75      .90      .95 \n 0.14530  0.27760  0.39820  0.52726  0.60390 \n\nlowest : 0.0025 0.0041 0.0065 0.0074 0.0103, highest: 0.6239 0.624  0.6833 0.6939 0.7313\n--------------------------------------------------------------------------------\nPercent.non.Hispanic.Asian \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     159        0      113    0.999  0.01258  0.01464  0.00000  0.00060 \n     .25      .50      .75      .90      .95 \n 0.00325  0.00760  0.01355  0.03076  0.03923 \n\nlowest : 0      1e-04  2e-04  7e-04  0.0013, highest: 0.0604 0.0703 0.0734 0.116  0.1291\n--------------------------------------------------------------------------------\nSVI.Category \n       n  missing distinct \n     159        0        5 \n\nHigh Vulnerability (31, 0.195), Low Vulnerability (15, 0.094), Moderate\nVulnerability (21, 0.132), Very High Vulnerability (82, 0.516), Very Low\nVulnerability (10, 0.063)\n--------------------------------------------------------------------------------\nCVAC.Level.Of.Concern \n       n  missing distinct \n     159        0        5 \n                                                                \nValue           High Concern       Low Concern  Moderate Concern\nFrequency                 50                 4                27\nProportion             0.314             0.025             0.170\n                                              \nValue      Very High Concern  Very Low Concern\nFrequency                 77                 1\nProportion             0.484             0.006\n--------------------------------------------------------------------------------\n\n\nFrom the results above, none of the variables have missing entries or unreasonable outliers. But we need to collapse some of the groups that have very small numbers for the two categorical variables.\n\n#collapse small groups for SVI.Category and CVAC.Level.Of.Concern \nvaccine_2 &lt;- vaccine_2 %&gt;%\n  mutate(SVI.Category = case_when(\n    SVI.Category %in% c(\"Very Low Vulnerability\", \"Low Vulnerability\") ~ \"Low/Very Low\",                            # combine Low and Very Low  \n    TRUE ~ SVI.Category   )) %&gt;% # leave other categories unchanged\n    mutate(CVAC.Level.Of.Concern  = case_when(\n    CVAC.Level.Of.Concern  %in% c(\"Very Low Concern\", \"Low Concern\", \"Moderate Concern\") ~ \"Very Low/Low/Moderate\",   # combine Very Low, Low and Moderate\n    TRUE ~ CVAC.Level.Of.Concern       # leave other categories unchanged\n  ))\n#check if recoding worked\ndescribe(vaccine_2)\n\nvaccine_2 \n\n 7  Variables      159  Observations\n--------------------------------------------------------------------------------\nFIPS.Code \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     159        0      159        1    13161      108    13017    13033 \n     .25      .50      .75      .90      .95 \n   13082    13161    13242    13289    13305 \n\nlowest : 13001 13003 13005 13007 13009, highest: 13313 13315 13317 13319 13321\n--------------------------------------------------------------------------------\nEstimated.hesitant \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     159        0       48    0.998   0.1618  0.01807   0.1363   0.1469 \n     .25      .50      .75      .90      .95 \n  0.1526   0.1623   0.1728   0.1864   0.1880 \n\nlowest : 0.1049 0.1085 0.1136 0.1178 0.1195, highest: 0.1747 0.1767 0.1784 0.1864 0.188 \n--------------------------------------------------------------------------------\nPercent.Hispanic \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     159        0      152        1  0.06489  0.05317  0.00803  0.01796 \n     .25      .50      .75      .90      .95 \n 0.03040  0.05050  0.08090  0.11848  0.15842 \n\nlowest : 0.0014 0.0028 0.0037 0.0043 0.0047, highest: 0.2117 0.2488 0.2728 0.2839 0.3511\n--------------------------------------------------------------------------------\nPercent.non.Hispanic.Black \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     159        0      158        1   0.2824   0.2014  0.01441  0.03316 \n     .25      .50      .75      .90      .95 \n 0.14530  0.27760  0.39820  0.52726  0.60390 \n\nlowest : 0.0025 0.0041 0.0065 0.0074 0.0103, highest: 0.6239 0.624  0.6833 0.6939 0.7313\n--------------------------------------------------------------------------------\nPercent.non.Hispanic.Asian \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     159        0      113    0.999  0.01258  0.01464  0.00000  0.00060 \n     .25      .50      .75      .90      .95 \n 0.00325  0.00760  0.01355  0.03076  0.03923 \n\nlowest : 0      1e-04  2e-04  7e-04  0.0013, highest: 0.0604 0.0703 0.0734 0.116  0.1291\n--------------------------------------------------------------------------------\nSVI.Category \n       n  missing distinct \n     159        0        4 \n                                                          \nValue           High Vulnerability            Low/Very Low\nFrequency                       31                      25\nProportion                   0.195                   0.157\n                                                          \nValue       Moderate Vulnerability Very High Vulnerability\nFrequency                       21                      82\nProportion                   0.132                   0.516\n--------------------------------------------------------------------------------\nCVAC.Level.Of.Concern \n       n  missing distinct \n     159        0        3 \n                                                                            \nValue               High Concern     Very High Concern Very Low/Low/Moderate\nFrequency                     50                    77                    32\nProportion                 0.314                 0.484                 0.201\n--------------------------------------------------------------------------------\n\n\nNow, SVI.Category has 4 categories and CVAC.Level.Of.Concern has 3 categories. The dataset is ready for analysis."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#table-and-figures-showing-distribution-of-variables",
    "href": "cdcdata-exercise/cdcdata-exercise.html#table-and-figures-showing-distribution-of-variables",
    "title": "CDC Data Exercise (Week 5)",
    "section": "Table and figures showing distribution of variables",
    "text": "Table and figures showing distribution of variables\n\n#get descriptive statistics of variables and create a table\nab&lt;-gtsummary::tbl_summary(select(vaccine_2,-\"FIPS.Code\"), statistic = list(\n  all_continuous() ~ \"{mean}/{sd}\",\n  all_categorical() ~ \"{n} / {N} ({p}%)\"\n),)\nknitr::kable(ab,caption = \"Summary Table: Mean/SD or n/N(%)\")\n\n\nSummary Table: Mean/SD or n/N(%)\n\n\nCharacteristic\nN = 159\n\n\n\n\nEstimated.hesitant\n0.162/0.016\n\n\nPercent.Hispanic\n0.06/0.05\n\n\nPercent.non.Hispanic.Black\n0.28/0.18\n\n\nPercent.non.Hispanic.Asian\n0.013/0.018\n\n\nSVI.Category\nNA\n\n\nHigh Vulnerability\n31 / 159 (19%)\n\n\nLow/Very Low\n25 / 159 (16%)\n\n\nModerate Vulnerability\n21 / 159 (13%)\n\n\nVery High Vulnerability\n82 / 159 (52%)\n\n\nCVAC.Level.Of.Concern\nNA\n\n\nHigh Concern\n50 / 159 (31%)\n\n\nVery High Concern\n77 / 159 (48%)\n\n\nVery Low/Low/Moderate\n32 / 159 (20%)\n\n\n\n\n#Histograms of Estimated.hesitant\nhist(vaccine_2$Estimated.hesitant)\n\n\n\n\n\n\n\n#Histograms of Percent.Hispanic\nhist(vaccine_2$Percent.Hispanic)\n\n\n\n\n\n\n\n#Histograms of Percent.non.Hispanic.Black\nhist(vaccine_2$Percent.non.Hispanic.Black)\n\n\n\n\n\n\n\n#Histograms of Percent.non.Hispanic.Asian\nhist(vaccine_2$Percent.non.Hispanic.Asian   )\n\n\n\n\n\n\n\n\nAccording to the histograms, we know none of the four continuous variables have normal distribution."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#this-section-contributed-by-patrick-kaggwa",
    "href": "cdcdata-exercise/cdcdata-exercise.html#this-section-contributed-by-patrick-kaggwa",
    "title": "CDC Data Exercise (Week 5)",
    "section": "This section contributed by Patrick Kaggwa",
    "text": "This section contributed by Patrick Kaggwa\n\n#Looking at the columns of vaccine2 before creating a synthetic dataset \ncolnames(vaccine_2)\n\n[1] \"FIPS.Code\"                  \"Estimated.hesitant\"        \n[3] \"Percent.Hispanic\"           \"Percent.non.Hispanic.Black\"\n[5] \"Percent.non.Hispanic.Asian\" \"SVI.Category\"              \n[7] \"CVAC.Level.Of.Concern\"     \n\n\nAfter undertanding the description of the above dataframe, I used ChatGPT to create a new dataframe called vaccine_2pk with the same structure as vaccine_2.\n\nChatGPT prompt\nCreate a dataset that should consist of 159 observations and include the following variables: FIPS codes, Estimated hesitant values, Percent Hispanic values, Percent non-Hispanic Black values, Percent non-Hispanic Asian values, SVI Category, and CVAC Level of Concern. To ensure reproducibility, set the seed to 123 before generating random values. The FIPS codes should range from 13001 to 13159. The Estimated hesitant values should be uniformly distributed between 0.1049 and 0.188. Percent Hispanic values should range uniformly between 0.0014 and 0.3511. Percent non-Hispanic Black values should range uniformly between 0.0025 and 0.7313. Percent non-Hispanic Asian values should range uniformly between 0 and 0.1291. The SVI Category should be sampled with replacement from ‘High Vulnerability’, ‘Low/Very Low’, ‘Moderate Vulnerability’, and ‘Very High Vulnerability’, with probabilities of 31/159, 25/159, 21/159, and 82/159 respectively. Similarly, the CVAC Level of Concern should be sampled with replacement from ‘High Concern’, ‘Very High Concern’, and ‘Very Low/Low/Moderate’, with probabilities of 50/159, 77/159, and 32/159 respectively. Create a dataframe with these variables named ’vaccine_2pk.\n\n# Set seed for reproducibility\nset.seed(123)\n\n# Generate FIPS codes\nFIPS.Code &lt;- seq(13001, 13159)\n\n# Generate Estimated hesitant values\nEstimated.hesitant &lt;- runif(159, min = 0.1049, max = 0.188)\n\n# Generate Percent Hispanic values\nPercent.Hispanic &lt;- runif(159, min = 0.0014, max = 0.3511)\n\n# Generate Percent non-Hispanic Black values\nPercent.non.Hispanic.Black &lt;- runif(159, min = 0.0025, max = 0.7313)\n\n# Generate Percent non-Hispanic Asian values\nPercent.non.Hispanic.Asian &lt;- runif(159, min = 0, max = 0.1291)\n\n# Generate SVI Category with exact distribution\nSVI.Category &lt;- sample(c(\"High Vulnerability\", \"Low/Very Low\", \"Moderate Vulnerability\", \"Very High Vulnerability\"),\n                        159, replace = TRUE, prob = c(31/159, 25/159, 21/159, 82/159))\n\n# Generate CVAC Level of Concern\nCVAC.Level.Of.Concern &lt;- sample(c(\"High Concern\", \"Very High Concern\", \"Very Low/Low/Moderate\"),\n                                159, replace = TRUE, prob = c(50/159, 77/159, 32/159))\n\n# Create the dataframe\nvaccine_2pk &lt;- data.frame(\n  FIPS.Code = FIPS.Code,\n  Estimated.hesitant = Estimated.hesitant,\n  Percent.Hispanic = Percent.Hispanic,\n  Percent.non.Hispanic.Black = Percent.non.Hispanic.Black,\n  Percent.non.Hispanic.Asian = Percent.non.Hispanic.Asian,\n  SVI.Category = SVI.Category,\n  CVAC.Level.Of.Concern = CVAC.Level.Of.Concern\n)\n\n# Print summary statistics for each variable\nsummary(vaccine_2pk)\n\n   FIPS.Code     Estimated.hesitant Percent.Hispanic  \n Min.   :13001   Min.   :0.1050     Min.   :0.003603  \n 1st Qu.:13040   1st Qu.:0.1253     1st Qu.:0.094079  \n Median :13080   Median :0.1437     Median :0.169970  \n Mean   :13080   Mean   :0.1464     Mean   :0.174977  \n 3rd Qu.:13120   3rd Qu.:0.1668     3rd Qu.:0.255824  \n Max.   :13159   Max.   :0.1875     Max.   :0.346079  \n Percent.non.Hispanic.Black Percent.non.Hispanic.Asian SVI.Category      \n Min.   :0.01545            Min.   :6.008e-05          Length:159        \n 1st Qu.:0.17746            1st Qu.:3.539e-02          Class :character  \n Median :0.33418            Median :6.698e-02          Mode  :character  \n Mean   :0.36120            Mean   :6.590e-02                            \n 3rd Qu.:0.53799            3rd Qu.:1.034e-01                            \n Max.   :0.73087            Max.   :1.282e-01                            \n CVAC.Level.Of.Concern\n Length:159           \n Class :character     \n Mode  :character     \n                      \n                      \n                      \n\n\n\n# I will desecribe the da\ndescribe(vaccine_2pk)\n\nvaccine_2pk \n\n 7  Variables      159  Observations\n--------------------------------------------------------------------------------\nFIPS.Code \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     159        0      159        1    13080    53.33    13009    13017 \n     .25      .50      .75      .90      .95 \n   13040    13080    13120    13143    13151 \n\nlowest : 13001 13002 13003 13004 13005, highest: 13155 13156 13157 13158 13159\n--------------------------------------------------------------------------------\nEstimated.hesitant \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     159        0      159        1   0.1464   0.0273   0.1123   0.1154 \n     .25      .50      .75      .90      .95 \n  0.1253   0.1437   0.1668   0.1791   0.1842 \n\nlowest : 0.104952 0.10577  0.106945 0.108395 0.108686\nhighest: 0.184927 0.186323 0.186689 0.18675  0.187524\n--------------------------------------------------------------------------------\nPercent.Hispanic \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     159        0      159        1    0.175   0.1124  0.02158  0.03743 \n     .25      .50      .75      .90      .95 \n 0.09408  0.16997  0.25582  0.30924  0.32963 \n\nlowest : 0.00360338 0.00427297 0.00469764 0.0084025  0.018068  \nhighest: 0.339699   0.340384   0.341265   0.344854   0.346079  \n--------------------------------------------------------------------------------\nPercent.non.Hispanic.Black \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     159        0      159        1   0.3612   0.2407  0.07465  0.10029 \n     .25      .50      .75      .90      .95 \n 0.17746  0.33418  0.53799  0.66356  0.71305 \n\nlowest : 0.0154477 0.022901  0.0270808 0.0279168 0.0449102\nhighest: 0.721063  0.721136  0.724913  0.728835  0.730866 \n--------------------------------------------------------------------------------\nPercent.non.Hispanic.Asian \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n     159        0      159        1   0.0659  0.04522 0.005402 0.010479 \n     .25      .50      .75      .90      .95 \n0.035393 0.066978 0.103433 0.115688 0.122780 \n\nlowest : 6.00766e-05 0.00208632  0.0023708   0.00283939  0.0032955  \nhighest: 0.12618     0.126415    0.12769     0.128189    0.128202   \n--------------------------------------------------------------------------------\nSVI.Category \n       n  missing distinct \n     159        0        4 \n                                                          \nValue           High Vulnerability            Low/Very Low\nFrequency                       32                      30\nProportion                   0.201                   0.189\n                                                          \nValue       Moderate Vulnerability Very High Vulnerability\nFrequency                       18                      79\nProportion                   0.113                   0.497\n--------------------------------------------------------------------------------\nCVAC.Level.Of.Concern \n       n  missing distinct \n     159        0        3 \n                                                                            \nValue               High Concern     Very High Concern Very Low/Low/Moderate\nFrequency                     57                    75                    27\nProportion                 0.358                 0.472                 0.170\n--------------------------------------------------------------------------------\n\n\n\n#get descriptive statistics of variables and create a table\nab&lt;-gtsummary::tbl_summary(select(vaccine_2pk,-\"FIPS.Code\"), statistic = list(\n  all_continuous() ~ \"{mean}/{sd}\",\n  all_categorical() ~ \"{n} / {N} ({p}%)\"\n),)\nknitr::kable(ab,caption = \"Summary Table: Mean/SD or n/N(%)\")\n\n\nSummary Table: Mean/SD or n/N(%)\n\n\nCharacteristic\nN = 159\n\n\n\n\nEstimated.hesitant\n0.146/0.024\n\n\nPercent.Hispanic\n0.17/0.10\n\n\nPercent.non.Hispanic.Black\n0.36/0.21\n\n\nPercent.non.Hispanic.Asian\n0.07/0.04\n\n\nSVI.Category\nNA\n\n\nHigh Vulnerability\n32 / 159 (20%)\n\n\nLow/Very Low\n30 / 159 (19%)\n\n\nModerate Vulnerability\n18 / 159 (11%)\n\n\nVery High Vulnerability\n79 / 159 (50%)\n\n\nCVAC.Level.Of.Concern\nNA\n\n\nHigh Concern\n57 / 159 (36%)\n\n\nVery High Concern\n75 / 159 (47%)\n\n\nVery Low/Low/Moderate\n27 / 159 (17%)\n\n\n\n\n#Histograms of Estimated.hesitant\nhist(vaccine_2pk$Estimated.hesitant)\n\n\n\n\n\n\n\n#Histograms of Percent.Hispanic\nhist(vaccine_2pk$Percent.Hispanic)\n\n\n\n\n\n\n\n#Histograms of Percent.non.Hispanic.Black\nhist(vaccine_2pk$Percent.non.Hispanic.Black)\n\n\n\n\n\n\n\n#Histograms of Percent.non.Hispanic.Asian\nhist(vaccine_2pk$Percent.non.Hispanic.Asian )\n\n\n\n\n\n\n\n\nThe histograms show less skewed distribution but at the same time they are not normally distributed. This is consistent with the histograms using dataframe vaccine_2"
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "Headshot\n\n\nBackground\nMy name is Chaohua Li, and I’m currently a second year PhD student in Epidemiology. I’m from China and has been living in Atlanta for many years. My research interests are maternal health, health equities, and chronic diseases.\nEducation\nPhD in Epidemiology, University of Georgia, GA, USA —Current\nMPH in Epidemiology, Emory University, GA, USA —2017\nMaster in Medicine, Liaoning University of TCM, Shenyang, China —2015\nBachelor in TCM, Liaoning University of TCM, Shenyang, China —2013\nProfessional Experience\nI’m currently working as a full-time biostatistician at the National Center for Primary Care, Morehouse School of Medicine. I provides statistical support to the research core team and external collaborators using Medicaid claims data and various national survey data. Our studies focus on identifying and measuring effect of socioeconomic determinants of racial/geographical disparity in health service utility and various health outcomes including severe maternal morbidity, cardiovascular diseases, depression, mortality rate, and so on. A list of my publications is attached here.\nBefore this job, I completed a fellowship program in the Division of STD at Centers for Disease Control and Prevention, where I obtained experiences of conducting health service researches using commercial claims data and national survey data. An example of the projects that I completed is evaluation of treatment rate among people tested positive for chlamydia or gonorrhea using commercial claims data.  \nSoftware Experience\nI have profound knowledge of SAS, as it was the first statistical software that I learned and I have been using it at work. I consider myself as an intermediate RStudio programmer, and I hope this course can take my skills to a higher level.\nFun Fact About Me\nI have a cat named Charlotte and I love her so much! I guess I can identify myself as a crazy cat person. Burying my head in my cat’s fluffy belly helps me release pressure. I adopted Charlotte from Furkids which is the largest cage-free and no-kill shelter in the Southeast. I highly recommend Furkids if you are interested in adopting a cat/dog in the Atlanta area.\n\n\n\nMy beloved Charlotte"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "#1-Loading and checking data\n#Load package dslabs and tidyr\nlibrary(\"dslabs\")\nlibrary(\"tidyverse\")\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n#pull help page for gapminder\nhelp(gapminder)\n\nstarting httpd help server ... done\n\n#check structure of gapminder\nstr(gapminder) \n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n#check summary of gapminder\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n#check type of gapminder\nclass(gapminder)\n\n[1] \"data.frame\""
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#loading-and-checking-data-gapminder",
    "href": "coding-exercise/coding-exercise.html#loading-and-checking-data-gapminder",
    "title": "R Coding Exercise",
    "section": "",
    "text": "#1-Loading and checking data\n#Load package dslabs and tidyr\nlibrary(\"dslabs\")\nlibrary(\"tidyverse\")\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n#pull help page for gapminder\nhelp(gapminder)\n\nstarting httpd help server ... done\n\n#check structure of gapminder\nstr(gapminder) \n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n#check summary of gapminder\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n#check type of gapminder\nclass(gapminder)\n\n[1] \"data.frame\""
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#processing-data",
    "href": "coding-exercise/coding-exercise.html#processing-data",
    "title": "R Coding Exercise",
    "section": "Processing data",
    "text": "Processing data\nCreate africadata which contains countries in Africa. Create infan_life that \ncontains infant_mortality and life_expectancy, and pop_life that contains \npopulation and life_expectancy.\n\n#2-Processing data\n#select countries in Africa into africadata\nafricadata  &lt;- \n  gapminder %&gt;% \n    filter(continent==\"Africa\")\n\nstr(africadata) \n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n#create infan_life that contains infant_mortality and life_expectancy, and check structures and summary\ninfan_life &lt;-\n  africadata %&gt;% \n    select(infant_mortality , life_expectancy)\nstr(infan_life) \n\n'data.frame':   2907 obs. of  2 variables:\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(infan_life)\n\n infant_mortality life_expectancy\n Min.   : 11.40   Min.   :13.20  \n 1st Qu.: 62.20   1st Qu.:48.23  \n Median : 93.40   Median :53.98  \n Mean   : 95.12   Mean   :54.38  \n 3rd Qu.:124.70   3rd Qu.:60.10  \n Max.   :237.40   Max.   :77.60  \n NA's   :226                     \n\n#create pop_life that contains population  and life_expectancy, and check structures and summary\npop_life &lt;-\n  africadata %&gt;% \n    select(population , life_expectancy)\nstr(pop_life) \n\n'data.frame':   2907 obs. of  2 variables:\n $ population     : num  11124892 5270844 2431620 524029 4829291 ...\n $ life_expectancy: num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(pop_life)\n\n   population        life_expectancy\n Min.   :    41538   Min.   :13.20  \n 1st Qu.:  1605232   1st Qu.:48.23  \n Median :  5570982   Median :53.98  \n Mean   : 12235961   Mean   :54.38  \n 3rd Qu.: 13888152   3rd Qu.:60.10  \n Max.   :182201962   Max.   :77.60  \n NA's   :51"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#plotting",
    "href": "coding-exercise/coding-exercise.html#plotting",
    "title": "R Coding Exercise",
    "section": "Plotting:",
    "text": "Plotting:\nPlot life expectancy as a function of infant mortality and as a function of \nlog(population size).\n\n‘Streaks’ of data that seem to go together were observed from both \nscatterplots. This is because the data contains information of African \ncountries for not one year but multiple years. Each streak of data points \nmay represent the longtitudinal data for the same country.\n\n#Scatterplot: life_expectancy ~ infant_mortality  \nggplot(infan_life, aes(infant_mortality, life_expectancy)) + \n  geom_point()\n\nWarning: Removed 226 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n#Scatterplot: life_expectancy ~ log(population)  \nggplot(pop_life, aes(log(population), life_expectancy)) + \n  geom_point()\n\nWarning: Removed 51 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#more-data-processing",
    "href": "coding-exercise/coding-exercise.html#more-data-processing",
    "title": "R Coding Exercise",
    "section": "More data processing",
    "text": "More data processing\n\n#Find which years have missing data for infant mortality\nafricadata %&gt;%\n  group_by(year) %&gt;%\n  summarise(missing_n=sum(is.na(infant_mortality)))\n\n# A tibble: 57 × 2\n    year missing_n\n   &lt;int&gt;     &lt;int&gt;\n 1  1960        10\n 2  1961        17\n 3  1962        16\n 4  1963        16\n 5  1964        15\n 6  1965        14\n 7  1966        13\n 8  1967        11\n 9  1968        11\n10  1969         7\n# ℹ 47 more rows\n\n#Create africa_2000 which contains data for 2000 only\nafrica_2000  &lt;- \n  africadata %&gt;% \n    filter(year==2000)\n#check structure and summary\nstr(africa_2000) \n\n'data.frame':   51 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(africa_2000)\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#more-plotting",
    "href": "coding-exercise/coding-exercise.html#more-plotting",
    "title": "R Coding Exercise",
    "section": "More plotting",
    "text": "More plotting\nPlot life expectancy as a function of infant mortality and as a function of \nlog(population size) using data from 2000.\n\n#Scatterplot for 2000: life_expectancy ~ infant_mortality  \nggplot(africa_2000, aes(infant_mortality, life_expectancy)) + \n  geom_point()\n\n\n\n\n\n\n\n#Scatterplot for 2000: life_expectancy ~ log(population)  \nggplot(africa_2000, aes(log(population), life_expectancy)) + \n  geom_point()"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#simple-model-fits",
    "href": "coding-exercise/coding-exercise.html#simple-model-fits",
    "title": "R Coding Exercise",
    "section": "Simple model fits",
    "text": "Simple model fits\nFit simple linear models with lm() function in R. Model 1: life expectancy \nas the outcome, and infant mortality as the predictor; Model 2: life expectancy \nas the outcome, and population as the predictor. We found that infant mortality \nwas positively and significantly associated with life expectancy (P-value&lt;.001), \nwhile population was not significantly associated with life expectancy \n(P-value=0.616) among African countries in 2000.\n\n#Linear model: life expectancy ~ infant mortality\nfit1&lt;-lm(life_expectancy~infant_mortality, data=africa_2000)\nsummary(fit1)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = africa_2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      71.29331    2.42611  29.386  &lt; 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\n#Linear model: life expectancy ~ population\nfit2&lt;-lm(life_expectancy~population, data=africa_2000)\nsummary(fit2)\n\n\nCall:\nlm(formula = life_expectancy ~ population, data = africa_2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-18.429  -4.602  -2.568   3.800  18.802 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 5.593e+01  1.468e+00  38.097   &lt;2e-16 ***\npopulation  2.756e-08  5.459e-08   0.505    0.616    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.524 on 49 degrees of freedom\nMultiple R-squared:  0.005176,  Adjusted R-squared:  -0.01513 \nF-statistic: 0.2549 on 1 and 49 DF,  p-value: 0.6159"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#step-1-separate-the-three-gases-co2-ch4-n2o",
    "href": "coding-exercise/coding-exercise.html#step-1-separate-the-three-gases-co2-ch4-n2o",
    "title": "R Coding Exercise",
    "section": "Step 1 Separate the three gases: CO2, CH4, N2O",
    "text": "Step 1 Separate the three gases: CO2, CH4, N2O\n\nCO2 &lt;- greenhouse_gases |&gt; filter(gas==\"CO2\") |&gt; select(year, concentration)\nsummary(CO2)\n\n      year      concentration  \n Min.   :  20   Min.   :272.3  \n 1st Qu.: 515   1st Qu.:277.6  \n Median :1010   Median :279.2  \n Mean   :1010   Mean   :282.1  \n 3rd Qu.:1505   3rd Qu.:282.2  \n Max.   :2000   Max.   :366.8  \n\nstr(CO2)\n\n'data.frame':   100 obs. of  2 variables:\n $ year         : num  20 40 60 80 100 120 140 160 180 200 ...\n $ concentration: num  278 278 277 277 278 ...\n\nCH4 &lt;- greenhouse_gases |&gt; filter(gas==\"CH4\") |&gt; select(year, concentration)\nsummary(CH4)\n\n      year      concentration   \n Min.   :  20   Min.   : 618.7  \n 1st Qu.: 515   1st Qu.: 641.3  \n Median :1010   Median : 661.5  \n Mean   :1010   Mean   : 697.9  \n 3rd Qu.:1505   3rd Qu.: 686.0  \n Max.   :2000   Max.   :1703.4  \n\nstr(CH4)\n\n'data.frame':   100 obs. of  2 variables:\n $ year         : num  20 40 60 80 100 120 140 160 180 200 ...\n $ concentration: num  638 631 628 628 631 ..."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#step-2-plot-and-compare-the-three-gases-over-the-years",
    "href": "coding-exercise/coding-exercise.html#step-2-plot-and-compare-the-three-gases-over-the-years",
    "title": "R Coding Exercise",
    "section": "Step 2 Plot and compare the three gases over the years",
    "text": "Step 2 Plot and compare the three gases over the years\n\nplot1 &lt;- ggplot(CO2, aes(year, concentration)) + geom_point()\nplot2 &lt;- ggplot(CH4, aes(year, concentration)) + geom_point()\nprint(plot1)\n\n\n\n\n\n\n\nprint(plot2)\n\n\n\n\n\n\n\n\n\nStep 3 Determine Average Africa population for the provided years\n\navg_pop &lt;- africadata |&gt; select(population, year) |&gt; group_by(year) |&gt; mutate(avg = mean(population)) \nsummary(avg_pop)\n\n   population             year           avg          \n Min.   :    41538   Min.   :1960   Min.   : 5464985  \n 1st Qu.:  1605232   1st Qu.:1974   1st Qu.: 7737871  \n Median :  5570982   Median :1988   Median :11312681  \n Mean   : 12235961   Mean   :1988   Mean   :12235961  \n 3rd Qu.: 13888152   3rd Qu.:2002   3rd Qu.:16140149  \n Max.   :182201962   Max.   :2016   Max.   :22768301  \n NA's   :51                         NA's   :51        \n\nstr(avg_pop)\n\ngropd_df [2,907 × 3] (S3: grouped_df/tbl_df/tbl/data.frame)\n $ population: num [1:2907] 11124892 5270844 2431620 524029 4829291 ...\n $ year      : int [1:2907] 1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ avg       : num [1:2907] 5464985 5464985 5464985 5464985 5464985 ...\n - attr(*, \"groups\")= tibble [57 × 2] (S3: tbl_df/tbl/data.frame)\n  ..$ year : int [1:57] 1960 1961 1962 1963 1964 1965 1966 1967 1968 1969 ...\n  ..$ .rows: list&lt;int&gt; [1:57] \n  .. ..$ : int [1:51] 1 2 3 4 5 6 7 8 9 10 ...\n  .. ..$ : int [1:51] 52 53 54 55 56 57 58 59 60 61 ...\n  .. ..$ : int [1:51] 103 104 105 106 107 108 109 110 111 112 ...\n  .. ..$ : int [1:51] 154 155 156 157 158 159 160 161 162 163 ...\n  .. ..$ : int [1:51] 205 206 207 208 209 210 211 212 213 214 ...\n  .. ..$ : int [1:51] 256 257 258 259 260 261 262 263 264 265 ...\n  .. ..$ : int [1:51] 307 308 309 310 311 312 313 314 315 316 ...\n  .. ..$ : int [1:51] 358 359 360 361 362 363 364 365 366 367 ...\n  .. ..$ : int [1:51] 409 410 411 412 413 414 415 416 417 418 ...\n  .. ..$ : int [1:51] 460 461 462 463 464 465 466 467 468 469 ...\n  .. ..$ : int [1:51] 511 512 513 514 515 516 517 518 519 520 ...\n  .. ..$ : int [1:51] 562 563 564 565 566 567 568 569 570 571 ...\n  .. ..$ : int [1:51] 613 614 615 616 617 618 619 620 621 622 ...\n  .. ..$ : int [1:51] 664 665 666 667 668 669 670 671 672 673 ...\n  .. ..$ : int [1:51] 715 716 717 718 719 720 721 722 723 724 ...\n  .. ..$ : int [1:51] 766 767 768 769 770 771 772 773 774 775 ...\n  .. ..$ : int [1:51] 817 818 819 820 821 822 823 824 825 826 ...\n  .. ..$ : int [1:51] 868 869 870 871 872 873 874 875 876 877 ...\n  .. ..$ : int [1:51] 919 920 921 922 923 924 925 926 927 928 ...\n  .. ..$ : int [1:51] 970 971 972 973 974 975 976 977 978 979 ...\n  .. ..$ : int [1:51] 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 ...\n  .. ..$ : int [1:51] 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 ...\n  .. ..$ : int [1:51] 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 ...\n  .. ..$ : int [1:51] 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 ...\n  .. ..$ : int [1:51] 1225 1226 1227 1228 1229 1230 1231 1232 1233 1234 ...\n  .. ..$ : int [1:51] 1276 1277 1278 1279 1280 1281 1282 1283 1284 1285 ...\n  .. ..$ : int [1:51] 1327 1328 1329 1330 1331 1332 1333 1334 1335 1336 ...\n  .. ..$ : int [1:51] 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 ...\n  .. ..$ : int [1:51] 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 ...\n  .. ..$ : int [1:51] 1480 1481 1482 1483 1484 1485 1486 1487 1488 1489 ...\n  .. ..$ : int [1:51] 1531 1532 1533 1534 1535 1536 1537 1538 1539 1540 ...\n  .. ..$ : int [1:51] 1582 1583 1584 1585 1586 1587 1588 1589 1590 1591 ...\n  .. ..$ : int [1:51] 1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 ...\n  .. ..$ : int [1:51] 1684 1685 1686 1687 1688 1689 1690 1691 1692 1693 ...\n  .. ..$ : int [1:51] 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 ...\n  .. ..$ : int [1:51] 1786 1787 1788 1789 1790 1791 1792 1793 1794 1795 ...\n  .. ..$ : int [1:51] 1837 1838 1839 1840 1841 1842 1843 1844 1845 1846 ...\n  .. ..$ : int [1:51] 1888 1889 1890 1891 1892 1893 1894 1895 1896 1897 ...\n  .. ..$ : int [1:51] 1939 1940 1941 1942 1943 1944 1945 1946 1947 1948 ...\n  .. ..$ : int [1:51] 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 ...\n  .. ..$ : int [1:51] 2041 2042 2043 2044 2045 2046 2047 2048 2049 2050 ...\n  .. ..$ : int [1:51] 2092 2093 2094 2095 2096 2097 2098 2099 2100 2101 ...\n  .. ..$ : int [1:51] 2143 2144 2145 2146 2147 2148 2149 2150 2151 2152 ...\n  .. ..$ : int [1:51] 2194 2195 2196 2197 2198 2199 2200 2201 2202 2203 ...\n  .. ..$ : int [1:51] 2245 2246 2247 2248 2249 2250 2251 2252 2253 2254 ...\n  .. ..$ : int [1:51] 2296 2297 2298 2299 2300 2301 2302 2303 2304 2305 ...\n  .. ..$ : int [1:51] 2347 2348 2349 2350 2351 2352 2353 2354 2355 2356 ...\n  .. ..$ : int [1:51] 2398 2399 2400 2401 2402 2403 2404 2405 2406 2407 ...\n  .. ..$ : int [1:51] 2449 2450 2451 2452 2453 2454 2455 2456 2457 2458 ...\n  .. ..$ : int [1:51] 2500 2501 2502 2503 2504 2505 2506 2507 2508 2509 ...\n  .. ..$ : int [1:51] 2551 2552 2553 2554 2555 2556 2557 2558 2559 2560 ...\n  .. ..$ : int [1:51] 2602 2603 2604 2605 2606 2607 2608 2609 2610 2611 ...\n  .. ..$ : int [1:51] 2653 2654 2655 2656 2657 2658 2659 2660 2661 2662 ...\n  .. ..$ : int [1:51] 2704 2705 2706 2707 2708 2709 2710 2711 2712 2713 ...\n  .. ..$ : int [1:51] 2755 2756 2757 2758 2759 2760 2761 2762 2763 2764 ...\n  .. ..$ : int [1:51] 2806 2807 2808 2809 2810 2811 2812 2813 2814 2815 ...\n  .. ..$ : int [1:51] 2857 2858 2859 2860 2861 2862 2863 2864 2865 2866 ...\n  .. ..@ ptype: int(0) \n  ..- attr(*, \".drop\")= logi TRUE"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#step-4-plot-population-vs-year",
    "href": "coding-exercise/coding-exercise.html#step-4-plot-population-vs-year",
    "title": "R Coding Exercise",
    "section": "Step 4 Plot Population vs year",
    "text": "Step 4 Plot Population vs year\n\nplot3 &lt;- ggplot(avg_pop, aes(year, avg)) + geom_point()\nprint(plot3)\n\nWarning: Removed 51 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#step-5-filter-the-gas-data-to-include-data-greater-than-1960",
    "href": "coding-exercise/coding-exercise.html#step-5-filter-the-gas-data-to-include-data-greater-than-1960",
    "title": "R Coding Exercise",
    "section": "Step 5 Filter the Gas data to include data greater than 1960",
    "text": "Step 5 Filter the Gas data to include data greater than 1960\n\nCO2_a &lt;- CO2 |&gt; filter(year &gt; 1940)\nCH4_a &lt;- CH4 |&gt; filter(year &gt; 1940)\nsummary(CO2_a)\n\n      year      concentration  \n Min.   :1960   Min.   :316.1  \n 1st Qu.:1970   1st Qu.:326.0  \n Median :1980   Median :335.9  \n Mean   :1980   Mean   :339.6  \n 3rd Qu.:1990   3rd Qu.:351.4  \n Max.   :2000   Max.   :366.8  \n\nsummary(CH4_a)\n\n      year      concentration \n Min.   :1960   Min.   :1206  \n 1st Qu.:1970   1st Qu.:1350  \n Median :1980   Median :1495  \n Mean   :1980   Mean   :1468  \n 3rd Qu.:1990   3rd Qu.:1599  \n Max.   :2000   Max.   :1703  \n\nplot4 &lt;- ggplot(CO2_a, aes(year, concentration)) + geom_point()\nplot5 &lt;- ggplot(CH4_a, aes(year, concentration)) + geom_point()\nprint(plot3)\n\nWarning: Removed 51 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\nprint(plot4)\n\n\n\n\n\n\n\nprint(plot5)\n\n\n\n\n\n\n\n\nComparing the population increase to the gas concentrations in the last 40 years. We can see as the average population increases there is an increase in greenhouse concentrations as well."
  },
  {
    "objectID": "fitting-exercise/fitting-exercise.html",
    "href": "fitting-exercise/fitting-exercise.html",
    "title": "Fitting Exercise (Week 8)",
    "section": "",
    "text": "Load packages and data\n\n#Load packages \nlibrary(here)\n\nhere() starts at C:/Users/chaoh/Desktop/UGA Courses/4_Spring 2024/EPID 8060E/MADA/chaohuali-MADA-portfolio\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(gtsummary)\n\n#BlackLivesMatter\n\nlibrary(knitr)\nlibrary(tidymodels) \n\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n✔ broom        1.0.5     ✔ rsample      1.2.0\n✔ dials        1.2.0     ✔ tune         1.1.2\n✔ infer        1.0.5     ✔ workflows    1.1.3\n✔ modeldata    1.2.0     ✔ workflowsets 1.0.1\n✔ parsnip      1.1.1     ✔ yardstick    1.2.0\n✔ recipes      1.0.9     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ recipes::all_double()  masks gtsummary::all_double()\n✖ recipes::all_factor()  masks gtsummary::all_factor()\n✖ recipes::all_integer() masks gtsummary::all_integer()\n✖ recipes::all_logical() masks gtsummary::all_logical()\n✖ recipes::all_numeric() masks gtsummary::all_numeric()\n✖ scales::discard()      masks purrr::discard()\n✖ dplyr::filter()        masks stats::filter()\n✖ recipes::fixed()       masks stringr::fixed()\n✖ dplyr::lag()           masks stats::lag()\n✖ yardstick::spec()      masks readr::spec()\n✖ recipes::step()        masks stats::step()\n• Learn how to get started at https://www.tidymodels.org/start/\n\nlibrary(yardstick)\nlibrary(pROC)\n\nType 'citation(\"pROC\")' for a citation.\n\nAttaching package: 'pROC'\n\nThe following objects are masked from 'package:stats':\n\n    cov, smooth, var\n\n#read csv data\ndrug &lt;- read.csv(here(\"fitting-exercise\", \"Mavoglurant_A2121_nmpk.csv\"))\n\n#preview dataset\ndplyr::glimpse(drug) \n\nRows: 2,678\nColumns: 17\n$ ID   &lt;int&gt; 793, 793, 793, 793, 793, 793, 793, 793, 793, 793, 793, 793, 793, …\n$ CMT  &lt;int&gt; 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2,…\n$ EVID &lt;int&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,…\n$ EVI2 &lt;int&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,…\n$ MDV  &lt;int&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,…\n$ DV   &lt;dbl&gt; 0.00, 491.00, 605.00, 556.00, 310.00, 237.00, 147.00, 101.00, 72.…\n$ LNDV &lt;dbl&gt; 0.000, 6.196, 6.405, 6.321, 5.737, 5.468, 4.990, 4.615, 4.282, 3.…\n$ AMT  &lt;dbl&gt; 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, …\n$ TIME &lt;dbl&gt; 0.000, 0.200, 0.250, 0.367, 0.533, 0.700, 1.200, 2.200, 3.200, 4.…\n$ DOSE &lt;dbl&gt; 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 2…\n$ OCC  &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ RATE &lt;int&gt; 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 0, 0, 0, 0,…\n$ AGE  &lt;int&gt; 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 2…\n$ SEX  &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ RACE &lt;int&gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,…\n$ WT   &lt;dbl&gt; 94.3, 94.3, 94.3, 94.3, 94.3, 94.3, 94.3, 94.3, 94.3, 94.3, 94.3,…\n$ HT   &lt;dbl&gt; 1.769997, 1.769997, 1.769997, 1.769997, 1.769997, 1.769997, 1.769…\n\n\nMake a plot that shows a line for each individual, with DV on the y-axis and time on the x-axis. Stratify by dose.\n\n#spaghetti plot \nggplot(drug, aes(x = TIME, y = DV, group = ID, color = factor(DOSE))) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Spaghetti Plot of DV over TIME Stratified by DOSE\",\n       x = \"TIME\",\n       y = \"DV\",\n       color = \"DOSE\")\n\n\n\n\n\n\n\n\nVery hard to tell the differences in the trajectory of DV across the DOSE groups, try log-transforming DV and remake the plot.\n\nggplot(drug, aes(x = TIME, y = log(DV), group = ID, color = factor(DOSE))) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Spaghetti Plot of log(DV) over TIME Stratified by DOSE\",\n       x = \"TIME\",\n       y = \"DV\",\n       color = \"DOSE\")\n\n\n\n\n\n\n\n\nIt looks like DV decreases faster over time among those from DOSE 25.\nKeeps only observations with OCC = 1.\n\ndrug2&lt;-drug[drug$OCC==1,]\n\nCreate a data frame of size 120 x 18 which excludes the observations with TIME = 0 and contains variable Y (total amount of drug for each individual).\n\n#create a new data frame that contains only observations with TIME = 0 \ndrug3&lt;-drug2[drug2$TIME == 0,]\n\n#exlude observations with TIME = 0 then compute the sum of the DV variable for each individual using dplyr::summarize()\nsum_dv &lt;- drug2 %&gt;%\n  filter(TIME != 0) %&gt;%\n  group_by(ID) %&gt;%\n  summarize(Y = sum(DV))\n\n#merge the two data frames above\nmerged_drug &lt;- left_join(drug3, sum_dv, by = \"ID\")\n\nConverts RACE, SEX and DOSE to factor variables and keeps variables Y,DOSE,AGE,SEX,RACE,WT,HT.\n\nmerged_drug2&lt;-merged_drug %&gt;%\n  mutate(RACE=factor(RACE),\n         SEX=factor(SEX),\n         DOSE=factor(DOSE)) %&gt;%\n  select(Y,DOSE,AGE,SEX,RACE,WT,HT)\n\n#preview new data frame\ndplyr::glimpse(merged_drug2) \n\nRows: 120\nColumns: 7\n$ Y    &lt;dbl&gt; 2690.52, 2638.81, 2149.61, 1788.89, 3126.37, 2336.89, 3007.20, 27…\n$ DOSE &lt;fct&gt; 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 37.5, 37.5, 37.5,…\n$ AGE  &lt;int&gt; 42, 24, 31, 46, 41, 27, 23, 20, 23, 28, 46, 22, 43, 50, 19, 26, 3…\n$ SEX  &lt;fct&gt; 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ RACE &lt;fct&gt; 2, 2, 1, 1, 2, 2, 1, 88, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1…\n$ WT   &lt;dbl&gt; 94.3, 80.4, 71.8, 77.4, 64.3, 74.1, 87.9, 61.9, 65.3, 103.5, 83.0…\n$ HT   &lt;dbl&gt; 1.769997, 1.759850, 1.809847, 1.649993, 1.560052, 1.829862, 1.850…"
  },
  {
    "objectID": "fitting-exercise/fitting-exercise.html#data-processing-and-exploration",
    "href": "fitting-exercise/fitting-exercise.html#data-processing-and-exploration",
    "title": "Fitting Exercise (Week 8)",
    "section": "",
    "text": "Load packages and data\n\n#Load packages \nlibrary(here)\n\nhere() starts at C:/Users/chaoh/Desktop/UGA Courses/4_Spring 2024/EPID 8060E/MADA/chaohuali-MADA-portfolio\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(gtsummary)\n\n#BlackLivesMatter\n\nlibrary(knitr)\nlibrary(tidymodels) \n\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n✔ broom        1.0.5     ✔ rsample      1.2.0\n✔ dials        1.2.0     ✔ tune         1.1.2\n✔ infer        1.0.5     ✔ workflows    1.1.3\n✔ modeldata    1.2.0     ✔ workflowsets 1.0.1\n✔ parsnip      1.1.1     ✔ yardstick    1.2.0\n✔ recipes      1.0.9     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ recipes::all_double()  masks gtsummary::all_double()\n✖ recipes::all_factor()  masks gtsummary::all_factor()\n✖ recipes::all_integer() masks gtsummary::all_integer()\n✖ recipes::all_logical() masks gtsummary::all_logical()\n✖ recipes::all_numeric() masks gtsummary::all_numeric()\n✖ scales::discard()      masks purrr::discard()\n✖ dplyr::filter()        masks stats::filter()\n✖ recipes::fixed()       masks stringr::fixed()\n✖ dplyr::lag()           masks stats::lag()\n✖ yardstick::spec()      masks readr::spec()\n✖ recipes::step()        masks stats::step()\n• Learn how to get started at https://www.tidymodels.org/start/\n\nlibrary(yardstick)\nlibrary(pROC)\n\nType 'citation(\"pROC\")' for a citation.\n\nAttaching package: 'pROC'\n\nThe following objects are masked from 'package:stats':\n\n    cov, smooth, var\n\n#read csv data\ndrug &lt;- read.csv(here(\"fitting-exercise\", \"Mavoglurant_A2121_nmpk.csv\"))\n\n#preview dataset\ndplyr::glimpse(drug) \n\nRows: 2,678\nColumns: 17\n$ ID   &lt;int&gt; 793, 793, 793, 793, 793, 793, 793, 793, 793, 793, 793, 793, 793, …\n$ CMT  &lt;int&gt; 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2,…\n$ EVID &lt;int&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,…\n$ EVI2 &lt;int&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,…\n$ MDV  &lt;int&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,…\n$ DV   &lt;dbl&gt; 0.00, 491.00, 605.00, 556.00, 310.00, 237.00, 147.00, 101.00, 72.…\n$ LNDV &lt;dbl&gt; 0.000, 6.196, 6.405, 6.321, 5.737, 5.468, 4.990, 4.615, 4.282, 3.…\n$ AMT  &lt;dbl&gt; 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, …\n$ TIME &lt;dbl&gt; 0.000, 0.200, 0.250, 0.367, 0.533, 0.700, 1.200, 2.200, 3.200, 4.…\n$ DOSE &lt;dbl&gt; 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 2…\n$ OCC  &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ RATE &lt;int&gt; 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 0, 0, 0, 0,…\n$ AGE  &lt;int&gt; 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 2…\n$ SEX  &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ RACE &lt;int&gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,…\n$ WT   &lt;dbl&gt; 94.3, 94.3, 94.3, 94.3, 94.3, 94.3, 94.3, 94.3, 94.3, 94.3, 94.3,…\n$ HT   &lt;dbl&gt; 1.769997, 1.769997, 1.769997, 1.769997, 1.769997, 1.769997, 1.769…\n\n\nMake a plot that shows a line for each individual, with DV on the y-axis and time on the x-axis. Stratify by dose.\n\n#spaghetti plot \nggplot(drug, aes(x = TIME, y = DV, group = ID, color = factor(DOSE))) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Spaghetti Plot of DV over TIME Stratified by DOSE\",\n       x = \"TIME\",\n       y = \"DV\",\n       color = \"DOSE\")\n\n\n\n\n\n\n\n\nVery hard to tell the differences in the trajectory of DV across the DOSE groups, try log-transforming DV and remake the plot.\n\nggplot(drug, aes(x = TIME, y = log(DV), group = ID, color = factor(DOSE))) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Spaghetti Plot of log(DV) over TIME Stratified by DOSE\",\n       x = \"TIME\",\n       y = \"DV\",\n       color = \"DOSE\")\n\n\n\n\n\n\n\n\nIt looks like DV decreases faster over time among those from DOSE 25.\nKeeps only observations with OCC = 1.\n\ndrug2&lt;-drug[drug$OCC==1,]\n\nCreate a data frame of size 120 x 18 which excludes the observations with TIME = 0 and contains variable Y (total amount of drug for each individual).\n\n#create a new data frame that contains only observations with TIME = 0 \ndrug3&lt;-drug2[drug2$TIME == 0,]\n\n#exlude observations with TIME = 0 then compute the sum of the DV variable for each individual using dplyr::summarize()\nsum_dv &lt;- drug2 %&gt;%\n  filter(TIME != 0) %&gt;%\n  group_by(ID) %&gt;%\n  summarize(Y = sum(DV))\n\n#merge the two data frames above\nmerged_drug &lt;- left_join(drug3, sum_dv, by = \"ID\")\n\nConverts RACE, SEX and DOSE to factor variables and keeps variables Y,DOSE,AGE,SEX,RACE,WT,HT.\n\nmerged_drug2&lt;-merged_drug %&gt;%\n  mutate(RACE=factor(RACE),\n         SEX=factor(SEX),\n         DOSE=factor(DOSE)) %&gt;%\n  select(Y,DOSE,AGE,SEX,RACE,WT,HT)\n\n#preview new data frame\ndplyr::glimpse(merged_drug2) \n\nRows: 120\nColumns: 7\n$ Y    &lt;dbl&gt; 2690.52, 2638.81, 2149.61, 1788.89, 3126.37, 2336.89, 3007.20, 27…\n$ DOSE &lt;fct&gt; 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 37.5, 37.5, 37.5,…\n$ AGE  &lt;int&gt; 42, 24, 31, 46, 41, 27, 23, 20, 23, 28, 46, 22, 43, 50, 19, 26, 3…\n$ SEX  &lt;fct&gt; 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ RACE &lt;fct&gt; 2, 2, 1, 1, 2, 2, 1, 88, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1…\n$ WT   &lt;dbl&gt; 94.3, 80.4, 71.8, 77.4, 64.3, 74.1, 87.9, 61.9, 65.3, 103.5, 83.0…\n$ HT   &lt;dbl&gt; 1.769997, 1.759850, 1.809847, 1.649993, 1.560052, 1.829862, 1.850…"
  },
  {
    "objectID": "fitting-exercise/fitting-exercise.html#eda-revisited",
    "href": "fitting-exercise/fitting-exercise.html#eda-revisited",
    "title": "Fitting Exercise (Week 8)",
    "section": "EDA revisited",
    "text": "EDA revisited\nMake a descriptive table of the variables\n\n#get descriptive statistics of variables and create a table\ntable1&lt;-gtsummary::tbl_summary(merged_drug2, statistic = list(\n  all_continuous() ~ \"{mean}/{sd}\",\n  all_categorical() ~ \"{n} / {N} ({p}%)\"\n),)\nknitr::kable(table1,caption = \"Summary Table: Mean/SD or n/N(%)\")\n\n\nSummary Table: Mean/SD or n/N(%)\n\n\nCharacteristic\nN = 120\n\n\n\n\nY\n2,445/962\n\n\nDOSE\nNA\n\n\n25\n59 / 120 (49%)\n\n\n37.5\n12 / 120 (10%)\n\n\n50\n49 / 120 (41%)\n\n\nAGE\n33/9\n\n\nSEX\nNA\n\n\n1\n104 / 120 (87%)\n\n\n2\n16 / 120 (13%)\n\n\nRACE\nNA\n\n\n1\n74 / 120 (62%)\n\n\n2\n36 / 120 (30%)\n\n\n7\n2 / 120 (1.7%)\n\n\n88\n8 / 120 (6.7%)\n\n\nWT\n83/13\n\n\nHT\n1.76/0.09\n\n\n\n\n\nThe majority of the cohort are of DOSE 25, SEX 1,and Race 1.\nMake scatterplots between Y and continuous predictors (AGE, WT, HT)\n\n#Scatterplot: Y ~ AGE  \nggplot(merged_drug2, aes(AGE, Y)) + \n  geom_point()\n\n\n\n\n\n\n\n#Scatterplot: Y ~ WT  \nggplot(merged_drug2, aes(WT, Y)) + \n  geom_point()\n\n\n\n\n\n\n\n#Scatterplot: Y ~ HT  \nggplot(merged_drug2, aes(HT, Y)) + \n  geom_point()\n\n\n\n\n\n\n\n\nNo obvious linear associations observed between Y and AGE, WT, HT.\nMake boxplots between Y and categorical predictors (DOSE, SEX, RACE)\n\n#Boxplot: Y ~ DOSE  \nggplot(merged_drug2, aes(factor(DOSE), Y)) + \n  geom_boxplot()\n\n\n\n\n\n\n\n#Boxplot: Y ~ SEX  \nggplot(merged_drug2, aes(SEX, Y)) + \n  geom_boxplot()\n\n\n\n\n\n\n\n#Boxplot: Y ~ RACE  \nggplot(merged_drug2, aes(RACE, Y)) + \n  geom_boxplot()\n\n\n\n\n\n\n\n\nIndividuals of different RACE groups or SEX groups have similar average value of Y. There seems to be a positive association between Y and DOSE.\nMake histograms for variables Y,AGE, WT, HT.\n\n#histogram for Y  \nhist(merged_drug2$Y)\n\n\n\n\n\n\n\n#histogram for AGE  \nhist(merged_drug2$AGE)\n\n\n\n\n\n\n\n#histogram for WT  \nhist(merged_drug2$WT)\n\n\n\n\n\n\n\n#histogram for HT.  \nhist(merged_drug2$HT)\n\n\n\n\n\n\n\n\nThese variables have a generally normal distribution. No obvious outliers are observed.\nMake scatterplot matrix for variables Y,AGE, WT, HT to inspect correlations.\n\npairs(merged_drug2[, c(\"Y\", \"AGE\", \"WT\", \"HT\")], main = \"Scatter Plot Matrix for Y,AGE, WT, HT\")\n\n\n\n\n\n\n\n\nWT and HT have relatively high correlation.\nSave the clean data frame locally\n\nsaveRDS(merged_drug2, file =  here(\"fitting-exercise\", \"merged_drug2.rds\"))"
  },
  {
    "objectID": "fitting-exercise/fitting-exercise.html#model-fitting",
    "href": "fitting-exercise/fitting-exercise.html#model-fitting",
    "title": "Fitting Exercise (Week 8)",
    "section": "Model fitting",
    "text": "Model fitting\nFit a linear model to the continuous outcome (Y) using the main predictor of interest DOSE, and calculate RMSE and R-squared.\n\n#fit linear model: Y~DOSE\nmodel1 &lt;- lm(Y ~ DOSE, data = merged_drug2)\nsummary(model1)\n\n\nCall:\nlm(formula = Y ~ DOSE, data = merged_drug2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1290.1  -445.6   -90.9   352.2  2367.7 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  1782.67      87.85  20.292  &lt; 2e-16 ***\nDOSE37.5      681.24     213.69   3.188  0.00184 ** \nDOSE50       1456.20     130.43  11.165  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 674.8 on 117 degrees of freedom\nMultiple R-squared:  0.5159,    Adjusted R-squared:  0.5076 \nF-statistic: 62.33 on 2 and 117 DF,  p-value: &lt; 2.2e-16\n\n# make predictions on the original data\npredictions1 &lt;- predict(model1, newdata = merged_drug2)\n\n# Compute RMSE and R-squared\nrmse_1 &lt;- rmse_vec(merged_drug2$Y, predictions1)\nrsquared_1 &lt;- rsq_vec(merged_drug2$Y, predictions1)\n\n# print RMSE and R-squared\ncat(\"RMSE:\", rmse_1, \"\\n\")\n\nRMSE: 666.3137 \n\ncat(\"R-squared:\", rsquared_1, \"\\n\")\n\nR-squared: 0.5158598 \n\n\nY of DOSE 37.5 (p-value=0.002) and Y of DOSE 50 (p-value&lt;.001) are significantly higher than Y of DOSE 25. RMSE is 666.3, and R-squared is 0.516.\nFit a linear model to the continuous outcome (Y) using the all predictor,and calculate RMSE and R-squared.\n\n#fit linear model: Y~DOSE+AGE+SEX+RACE+WT+HT\nmodel2 &lt;- lm(Y ~ DOSE+AGE+SEX+RACE+WT+HT, data = merged_drug2)\nsummary(model2)\n\n\nCall:\nlm(formula = Y ~ DOSE + AGE + SEX + RACE + WT + HT, data = merged_drug2)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1496.97  -362.81   -71.26   285.84  2421.48 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 4890.923   1822.710   2.683 0.008415 ** \nDOSE37.5     663.683    200.448   3.311 0.001258 ** \nDOSE50      1499.048    122.462  12.241  &lt; 2e-16 ***\nAGE            3.521      7.895   0.446 0.656517    \nSEX2        -360.048    217.775  -1.653 0.101121    \nRACE2        148.883    129.821   1.147 0.253936    \nRACE7       -420.950    451.163  -0.933 0.352846    \nRACE88       -65.300    246.961  -0.264 0.791954    \nWT           -23.281      6.440  -3.615 0.000454 ***\nHT          -741.050   1108.100  -0.669 0.505051    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 616.6 on 110 degrees of freedom\nMultiple R-squared:   0.62, Adjusted R-squared:  0.5889 \nF-statistic: 19.94 on 9 and 110 DF,  p-value: &lt; 2.2e-16\n\n# make predictions on the original data\npredictions2 &lt;- predict(model2, newdata = merged_drug2)\n\n# Compute RMSE and R-squared\nrmse_2 &lt;- rmse_vec(merged_drug2$Y, predictions2)\nrsquared_2 &lt;- rsq_vec(merged_drug2$Y, predictions2)\n\n# print RMSE and R-squared\ncat(\"RMSE:\", rmse_2, \"\\n\")\n\nRMSE: 590.3153 \n\ncat(\"R-squared:\", rsquared_2, \"\\n\")\n\nR-squared: 0.6200016 \n\n\nAfter adjusting for covariates, Y of DOSE 37.5 (p-value=0.001) and Y of DOSE 50 (p-value&lt;.001) are significantly higher than Y of DOSE 25. One unit increase in WT (p-value&lt;.001) is significantly associated with a decrease of 23.3 in Y. Other covariates are not significantly associated with Y. RMSE is 590.3, and R-squared is 0.62. This model has better fit than the model with only DOSE as predictor.\nFit a logistic model to the SEX using the main predictor DOSE,and calculate accuracy and ROC-AUC.\n\n# fit logistic model: SEX~DOSE\nlogistic_model &lt;- logistic_reg(mode = \"classification\") %&gt;%\n  set_engine(\"glm\") %&gt;%\n  set_mode(\"classification\")\n\nmodel3 &lt;- logistic_model %&gt;% \n  fit(SEX ~ DOSE, data = merged_drug2)\n\n#calculate odds ratios\nmodel_estimates &lt;- tidy(model3, conf.int = TRUE)\nmodel_estimates$odds_ratio &lt;- exp(model_estimates$estimate)\n\n# display model estimates and odds ratios\nprint(model_estimates[, c(\"term\", \"estimate\", \"conf.low\", \"conf.high\", \"odds_ratio\",\"p.value\")])\n\n# A tibble: 3 × 6\n  term        estimate conf.low conf.high odds_ratio    p.value\n  &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n1 (Intercept)  -1.59      -2.33    -0.953      0.204 0.00000465\n2 DOSE37.5     -0.0202    -1.99     1.50       0.980 0.981     \n3 DOSE50       -0.831     -2.18     0.339      0.436 0.185     \n\n# Make predictions on the original data\nprediction3 &lt;- predict(model3, new_data = merged_drug2)\nprediction3$SEX&lt;-merged_drug2$SEX\n\n# Compute accuracy\naccuracy_value3 &lt;- accuracy(prediction3, truth = SEX, estimate = .pred_class)\n\n# Compute AUC\nroc_curve3 &lt;- roc(as.numeric(prediction3$SEX),as.numeric( prediction3$.pred_class))\n\nSetting levels: control = 1, case = 2\n\n\nSetting direction: controls &lt; cases\n\nauc_value3 &lt;- auc(roc_curve3)\n\n# Print accuracy and AUC\ncat(\"Accuracy:\", accuracy_value3$.estimate, \"\\n\")\n\nAccuracy: 0.8666667 \n\ncat(\"AUC:\", auc_value3, \"\\n\")\n\nAUC: 0.5 \n\n\nThere is no significant association between DOSE and SEX. The accuracy of the model is 0.867 and the AUC is 0.5.\nFit a logistic model to the SEX using the main predictor DOSE,and calculate accuracy and ROC-AUC.\n\n# fit logistic model: SEX~DOSE\nlogistic_model &lt;- logistic_reg(mode = \"classification\") %&gt;%\n  set_engine(\"glm\") %&gt;%\n  set_mode(\"classification\")\n\nmodel4 &lt;- logistic_model %&gt;% \n  fit(SEX ~ DOSE + Y + AGE + HT + WT + RACE, data = merged_drug2)\n\n#calculate odds ratios\nmodel_estimates &lt;- tidy(model4, conf.int = TRUE)\nmodel_estimates$odds_ratio &lt;- exp(model_estimates$estimate)\n\n# display model estimates and odds ratios\nprint(model_estimates[, c(\"term\", \"estimate\", \"conf.low\", \"conf.high\", \"odds_ratio\",\"p.value\")])\n\n# A tibble: 10 × 6\n   term         estimate  conf.low  conf.high odds_ratio  p.value\n   &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1 (Intercept)  59.1      30.5     103.         4.83e+25 0.000779\n 2 DOSE37.5     -2.51     -6.86      1.24       8.12e- 2 0.219   \n 3 DOSE50       -0.618    -4.86      2.90       5.39e- 1 0.746   \n 4 Y            -0.00111  -0.00322   0.000624   9.99e- 1 0.245   \n 5 AGE           0.113    -0.0148    0.261      1.12e+ 0 0.101   \n 6 HT          -32.0     -58.0     -15.0        1.28e-14 0.00210 \n 7 WT           -0.0923   -0.262     0.0667     9.12e- 1 0.248   \n 8 RACE2        -2.27     -5.73      0.235      1.03e- 1 0.125   \n 9 RACE7        -0.443    -7.08      5.52       6.42e- 1 0.919   \n10 RACE88       -2.02     -7.21      1.98       1.33e- 1 0.406   \n\n# Make predictions on the original data\nprediction4 &lt;- predict(model4, new_data = merged_drug2)\nprediction4$SEX&lt;-merged_drug2$SEX\n\n# Compute accuracy\naccuracy_value4 &lt;- accuracy(prediction4, truth = SEX, estimate = .pred_class)\n\n# Compute AUC\nroc_curve4 &lt;- roc(as.numeric(prediction4$SEX),as.numeric( prediction4$.pred_class))\n\nSetting levels: control = 1, case = 2\n\n\nSetting direction: controls &lt; cases\n\nauc_value4 &lt;- auc(roc_curve4)\n\n# Print accuracy and AUC\ncat(\"Accuracy:\", accuracy_value4$.estimate, \"\\n\")\n\nAccuracy: 0.9583333 \n\ncat(\"AUC:\", auc_value4, \"\\n\")\n\nAUC: 0.8966346 \n\n\nThere is still no significant association between DOSE and SEX. Only HT is significantly associated with SEX. The accuracy of the model is 0.958 and the AUC is 0.897. This model has better fit than the model with only DOSE as predictor."
  },
  {
    "objectID": "fitting-exercise/fitting-exercise.html#this-section-added-by-liza-hall",
    "href": "fitting-exercise/fitting-exercise.html#this-section-added-by-liza-hall",
    "title": "Fitting Exercise (Week 8)",
    "section": "This section added by Liza Hall",
    "text": "This section added by Liza Hall\n\n\n\nModel Predictions\n\nPredicted Values VS Observed Values\nLoad necessecary libraries\n\nlibrary(tidyverse)\nlibrary(tidymodels)\n\nGenerate predictions for both models.\n\n# Prediction for Model 1 (DOSE as predictor)\npred1 &lt;- predict(linfit1, train_data) %&gt;%\n  bind_cols(train_data) %&gt;%\n  select(Y, .pred) %&gt;%\n  mutate(model = \"DOSE Only\")\n\n# Prediction for Model 2 (All variables as predictors)\npred2 &lt;- predict(linfit2, train_data) %&gt;%\n  bind_cols(train_data) %&gt;%\n  select(Y, .pred) %&gt;%\n  mutate(model = \"All Predictors\")\n\nManually create predictions for null model based on the mean.\n\n# Prediction for Null Model (mean prediction)\ntrain_data$null_pred &lt;- meanY # meanY calculated previously as mean(train_data$Y)\nnull_model_pred &lt;- train_data %&gt;%\n  select(Y, null_pred) %&gt;%\n  rename(.pred = null_pred) %&gt;%\n  mutate(model = \"Null Model\")\n\ntrain_data &lt;- train_data %&gt;% select(-null_pred)\n\nCombine all predictions into one dataset.\n\n# Combine all predictions into one data frame\ncombined_predictions &lt;- bind_rows(pred1, pred2, null_model_pred)\n\nPlotting the graph with ggplot.\n\n# Plotting with ggplot\nggplot(combined_predictions, aes(x = Y, y = .pred, color = model)) +\n  geom_point() +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"gray\") + # 45 degree line\n  scale_x_continuous(limits = c(0, 5000)) +\n  scale_y_continuous(limits = c(0, 5000)) +\n  labs(x = \"Observed\", y = \"Predicted\", title = \"Observed vs. Predicted Values\") +\n  theme_minimal() +\n  scale_color_manual(values = c(\"DOSE Only\" = \"#5c88da\", \"All Predictors\" = \"#84bd00\", \"Null Model\" = \"#ffcd00\")) +\n  theme(\n    plot.background = element_rect(fill = \"gray99\", color = NA), # Change the entire plot background\n    panel.background = element_rect(fill = \"gray99\", color = NA) # Change the plotting area background\n  )\n\n\n\n\n\n\n\n\n\n\nPredicted Values VS Residuals\nCalculate residuals for model 2.\n\n# Calculate residuals for Model 2\nmodel2_residuals &lt;- pred2 %&gt;%\n  mutate(residuals = .pred - Y)\n\nFinding the range for the Y-axis.\nThis ensures it goes into the positive and negative by the same amount.\n\n# Finding the range for Y-axis to ensure it goes the same amount into positive and negative direction\nmax_abs_residual &lt;- max(abs(model2_residuals$residuals))\n\nPlotting the graph with ggplot.\n\n# Plotting Predicted vs. Residuals for Model 2\nggplot(model2_residuals, aes(x = .pred, y = residuals)) +\n  geom_point(colour=\"#5c88da\") +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") + # Straight line at 0\n  scale_y_continuous(limits = c(-max_abs_residual, max_abs_residual)) + # Same amount in positive and negative direction\n  labs(x = \"Predicted\", y = \"Residuals\", title = \"Predicted vs. Residuals for All Predictors Model\") +\n  theme_minimal() +\n  theme(\n    plot.background = element_rect(fill = \"gray99\", color = NA), # Change the entire plot background\n    panel.background = element_rect(fill = \"gray99\", color = NA) # Change the plotting area background\n  )\n\n\n\n\n\n\n\n\n\n\n\nModel Predictions and Uncertainty\n\n\n\nPredicted Values VS Observed Values\nLoad required libraries.\n\nlibrary(rsample)\n\nSet seed and create bootstraps.\n\nset.seed(rngseed)\n\ndat_bs &lt;- bootstraps(train_data, times = 100)\n\nInitialize list to store predictions, then loop over bootstrap samples and store predcitions in list. Also, assigning original predictions to ‘orig_pred’ for easier managment.\n\n# Initialize a list to store predictions\npred_bs &lt;- list()\n\n# Loop over each bootstrap sample in 'dat_bs'\nfor(i in 1:length(dat_bs$splits)) {\n \n  # Extract the bootstrap sample\n  dat_sample = rsample::analysis(dat_bs$splits[[i]])\n  \n  # Fit the model to the bootstrap sample \n  linfit2 &lt;- lin_mod %&gt;% fit(Y ~ ., data = dat_sample)\n  \n  # Make predictions on the original training data\n  predictions &lt;- predict(linfit2, new_data = train_data)\n  \n  # Store predictions\n  pred_bs[[i]] &lt;- predictions\n}\n\n# Assigning original predictions \norig_pred &lt;- pred2$.pred\n\nConvert vector list into matrix. Then the mean, lower CI, and upper CI are calculated for each row of bootstrap samples. After this is done, the values are assigned to ‘train_data’ for plotting.\n\n# Convert the list of vectors into a matrix\npred_matrix &lt;- do.call(cbind, pred_bs)\n\n# Calculate the median, lower CI, and upper CI for each row across bootstrap samples\npreds &lt;- apply(pred_matrix, 1, function(x) quantile(x, probs = c(0.025, 0.5, 0.975)))\npreds &lt;- t(preds) \n\n# Assign\ntrain_data$median_pred &lt;- preds[, 2] # Median\ntrain_data$lower_ci &lt;- preds[, 1] # Lower CI\ntrain_data$upper_ci &lt;- preds[, 3] # Upper CI\n\nPlotting the graph.\n\n# Plotting\nggplot(train_data, aes(x = Y)) +\n  geom_point(aes(y = orig_pred, color = \"Original Predictions\"), size = 1.5) +\n  geom_point(aes(y = median_pred, color = \"Median Predictions\"), size = 1.5) +\n  geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci, color = \"Confidence Intervals\"), width = 0.2, alpha = 0.8) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"gray\") +\n  scale_x_continuous(limits = c(0, max(train_data$Y))) +\n  scale_y_continuous(limits = c(0, max(c(train_data$orig_pred, train_data$upper_ci)))) +\n  labs(x = \"Observed Values\", y = \"Predicted Values with Confidence Intervals\", \n       title = \"Observed Values vs. Predicted Values with Confidence Intervals\") +\n  scale_color_manual(values = c(\"Original Predictions\" = \"#84bd00\",\n                                \"Median Predictions\" = \"#5c88da\",\n                                \"Confidence Intervals\" = \"#ffcd00\")) +\n  theme_minimal() +\n   theme(\n    plot.background = element_rect(fill = \"gray99\", color = NA), # Change the entire plot background\n    panel.background = element_rect(fill = \"gray99\", color = NA) # Change the plotting area background\n  ) +\n  guides(color = guide_legend(title = \"Legend\")) +\n  theme(legend.position = \"right\", \n        legend.text = element_text(size = 8), \n        legend.title = element_text(size = 9), \n        legend.key.size = unit(0.5, \"cm\"), \n        legend.spacing.x = unit(0.2, \"cm\"), \n        legend.spacing.y = unit(0.1, \"cm\")) \n\n\n\n\n\n\n\n\n\n\n\n\nInterpretation\nAs seen in the graph above, the points on the graph are relatively close to the line of perfect fit, which suggests that the model’s predictions are reasonably accurate. The model does seem to be better at predicting the lower values of Y however, as seen by the cluster of points near the line of perfect fit, towards the bottom left of the graph. As the values of Y get higher, however, the points become more scattered, indicating that the model is not at good at predicting the higher Y values. There also somewhat appears to be a pattern in the error bars, which also indicates that the model may be better at predicting the lower values of Y."
  },
  {
    "objectID": "fitting-exercise/fitting-exercise.html#final-evaluation-using-test-data",
    "href": "fitting-exercise/fitting-exercise.html#final-evaluation-using-test-data",
    "title": "Fitting Exercise (Week 8)",
    "section": "Final evaluation using test data",
    "text": "Final evaluation using test data\nUse model 2 to make predictions for the test data and create a dataframe that contains observed data and predicted data for both train data and test data.\n\n#make predictions using test data\npred_test &lt;- predict(linfit2, new_data = test_data)$.pred\n\n#create dataframes for predictions on train data and test data respectively\ntest_pred &lt;- data.frame(\n  Observed  = test_data$Y,\n  Predicted  = pred_test,\n  label=\"Predictions on test data\")\n\ntrain_pred &lt;- data.frame(\n  Observed  = train_data$Y,\n  Predicted  = pred2$.pred,\n  label=\"Predictions on train data\")\n\n#concatenate two dataframes above\ngraph_3&lt;-rbind(train_pred,test_pred)\n\nPlot predicted versus observed values for both the train data and test data\n\nggplot(graph_3, aes(x = Observed, y = Predicted, color = label, shape=label)) +\n  geom_point() +  \n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"grey\") +  \n  labs(x = \"Observed Values\", y = \"Predicted Values\", title = \"Observed vs. Predicted Values by Train/Test data\", color = \"Train/Test Data\", shape =\"Train/Test Data\" ) +\n  theme_minimal() + # Use a minimal theme for aesthetics\n  scale_shape_manual(values = c(15, 17)) + # Set different shapes for train/test predictions\n  scale_color_manual(values = c(\"blue\", \"green\"))"
  },
  {
    "objectID": "fitting-exercise/fitting-exercise.html#overall-model-assessment",
    "href": "fitting-exercise/fitting-exercise.html#overall-model-assessment",
    "title": "Fitting Exercise (Week 8)",
    "section": "Overall model assessment",
    "text": "Overall model assessment\nModel 1(DOSE) and Model 2(all predictors) both have much lower RMSE than the null model, regardless of fitting the model directly to train data or using cross-validation. This indicates Model 1 and Model 2 have better performance than the null model.\nAlthough Model 1 performs better than the null model, it does not predicts well. In the observed vs predicted value plot, predictions from Model 1 form three horizontal lines along the diagonal reference line. Model 1 is not able to capture the main pattern in the data. This is probably due to the lack of variation in DOSE which has only three values. I would not use Model 1 to make predictions for real purposes.\nModel 2 has better performance with additional predictors added. It has the lowest RMSE; the data points on observed vs predicted plot generally scatter around the diagonal line, the confidence intervals for predictions are not too wide; and there is no obvious odd pattern in the residual vs predicted value plot. This indicates Model 2 performs well and can captures the main pattern in the data. Most importantly, the data points on the observed vs predicted plot using the test data scatter around the diagonal line, which indicates the predictions on the test data are generally accurate. I would use this model to make predictions. But I would be careful for predicted values that are too high (roughly over 4000),as the observed vs predicted plot indicates lower accuracy for that range."
  },
  {
    "objectID": "ml-models-exercise/ml-models-exercise.html",
    "href": "ml-models-exercise/ml-models-exercise.html",
    "title": "Machine Learning Models Exercise (Week 11)",
    "section": "",
    "text": "Load packages and data\n\n#Load packages \nlibrary(here)\n\nhere() starts at C:/Users/chaoh/Desktop/UGA Courses/4_Spring 2024/EPID 8060E/MADA/chaohuali-MADA-portfolio\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidymodels) \n\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n✔ broom        1.0.5     ✔ rsample      1.2.0\n✔ dials        1.2.0     ✔ tune         1.1.2\n✔ infer        1.0.5     ✔ workflows    1.1.3\n✔ modeldata    1.2.0     ✔ workflowsets 1.0.1\n✔ parsnip      1.1.1     ✔ yardstick    1.2.0\n✔ recipes      1.0.9     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Use tidymodels_prefer() to resolve common conflicts.\n\nlibrary(ggplot2)\nlibrary(yardstick)\nlibrary(glmnet)\n\nWarning: package 'glmnet' was built under R version 4.3.3\n\n\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\nLoaded glmnet 4.1-8\n\nlibrary(ranger)\n\n#read previously saved rds data\nmodule11&lt;-readRDS( here(\"ml-models-exercise\", \"merged_drug2.rds\"))\n\n#save a seed value\nrngseed = 1234"
  },
  {
    "objectID": "ml-models-exercise/ml-models-exercise.html#preliminaries",
    "href": "ml-models-exercise/ml-models-exercise.html#preliminaries",
    "title": "Machine Learning Models Exercise (Week 11)",
    "section": "",
    "text": "Load packages and data\n\n#Load packages \nlibrary(here)\n\nhere() starts at C:/Users/chaoh/Desktop/UGA Courses/4_Spring 2024/EPID 8060E/MADA/chaohuali-MADA-portfolio\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidymodels) \n\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n✔ broom        1.0.5     ✔ rsample      1.2.0\n✔ dials        1.2.0     ✔ tune         1.1.2\n✔ infer        1.0.5     ✔ workflows    1.1.3\n✔ modeldata    1.2.0     ✔ workflowsets 1.0.1\n✔ parsnip      1.1.1     ✔ yardstick    1.2.0\n✔ recipes      1.0.9     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Use tidymodels_prefer() to resolve common conflicts.\n\nlibrary(ggplot2)\nlibrary(yardstick)\nlibrary(glmnet)\n\nWarning: package 'glmnet' was built under R version 4.3.3\n\n\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\nLoaded glmnet 4.1-8\n\nlibrary(ranger)\n\n#read previously saved rds data\nmodule11&lt;-readRDS( here(\"ml-models-exercise\", \"merged_drug2.rds\"))\n\n#save a seed value\nrngseed = 1234"
  },
  {
    "objectID": "ml-models-exercise/ml-models-exercise.html#more-processing",
    "href": "ml-models-exercise/ml-models-exercise.html#more-processing",
    "title": "Machine Learning Models Exercise (Week 11)",
    "section": "More processing",
    "text": "More processing\nWrite code that changes the RACE variable such that it combines categories 7 and 88 and puts them in a category called 3.\n\n#check levels in RACE\ntable(module11$RACE)\n\n\n 1  2  7 88 \n74 36  2  8 \n\n#recode 7 and 88 as 3 in RACE\nmodule11$RACE &lt;- ifelse(module11$RACE == 7 | module11$RACE == 88, 3, module11$RACE)\ntable(module11$RACE)\n\n\n 1  2  3 \n74 36 10 \n\n#set variables type for RACE\nmodule11&lt;-module11  %&gt;%\n  mutate(RACE=as.factor(RACE),\n         DOSE=as.numeric(DOSE))"
  },
  {
    "objectID": "ml-models-exercise/ml-models-exercise.html#pairwise-correlations",
    "href": "ml-models-exercise/ml-models-exercise.html#pairwise-correlations",
    "title": "Machine Learning Models Exercise (Week 11)",
    "section": "Pairwise correlations",
    "text": "Pairwise correlations\nMake a correlation plot for the continuous variables\n\n#make a correlation plot for the continuous variables\npairs(module11[, c(\"Y\",\"DOSE\", \"AGE\", \"WT\", \"HT\")], main = \"Scatter Plot Matrix for Y, DOSE, AGE, WT, and HT\")\n\n\n\n\n\n\n\n#calcualte correlation coefficients\ncor(module11[, c(\"Y\", \"DOSE\",\"AGE\", \"WT\", \"HT\")])\n\n               Y       DOSE         AGE         WT          HT\nY     1.00000000 0.71808396  0.01256372 -0.2128719 -0.15832972\nDOSE  0.71808396 1.00000000  0.07201600  0.1012319  0.01877994\nAGE   0.01256372 0.07201600  1.00000000  0.1196740 -0.35185806\nWT   -0.21287194 0.10123185  0.11967399  1.0000000  0.59975050\nHT   -0.15832972 0.01877994 -0.35185806  0.5997505  1.00000000\n\n\nWT and HT seem strongly correlated according to the scatterplot, but the correlation coefficient is 0.6 which is lower than the threshold 0.9. There is no considerable collinearity among the variables."
  },
  {
    "objectID": "ml-models-exercise/ml-models-exercise.html#feature-engineering",
    "href": "ml-models-exercise/ml-models-exercise.html#feature-engineering",
    "title": "Machine Learning Models Exercise (Week 11)",
    "section": "Feature engineering",
    "text": "Feature engineering\n\n#create BMI based on WT and HT\nmodule11$BMI&lt;-module11$WT/(module11$HT^2)"
  },
  {
    "objectID": "ml-models-exercise/ml-models-exercise.html#model-building",
    "href": "ml-models-exercise/ml-models-exercise.html#model-building",
    "title": "Machine Learning Models Exercise (Week 11)",
    "section": "Model building",
    "text": "Model building\n\nFirst fit\n\nFit a linear model with all predictors.\n\n\n#fit linear model: Y~all predictors\nlin_mod &lt;- linear_reg() %&gt;% set_engine(\"lm\")\nlin_fit &lt;- lin_mod %&gt;% fit(Y ~ ., data = module11)\ntidy(lin_fit)\n\n# A tibble: 9 × 5\n  term         estimate std.error statistic  p.value\n  &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)  32790.    10157.       3.23  1.64e- 3\n2 DOSE           739.       59.1     12.5   6.22e-23\n3 AGE              4.53      7.47     0.607 5.45e- 1\n4 SEX2          -435.      210.      -2.07  4.06e- 2\n5 RACE2          158.      124.       1.27  2.07e- 1\n6 RACE3         -258.      215.      -1.20  2.33e- 1\n7 WT             145.       59.5      2.45  1.60e- 2\n8 HT          -16840.     5728.      -2.94  4.00e- 3\n9 BMI           -536.      188.      -2.85  5.20e- 3\n\n# make predictions on the original data\npredictions1 &lt;- predict(lin_fit, new_data = module11)\n\n# Compute RMSE \nrmse_1 &lt;- rmse_vec(module11$Y, predictions1$.pred)\n# print RMSE\ncat(\"RMSE:\", rmse_1, \"\\n\")\n\nRMSE: 571.5954 \n\n#Plot observed vs predicted values\nplot1&lt;-data.frame(\n  observed=module11$Y,\n  predicted=predictions1$.pred\n)\n\nggplot(plot1 ,aes(x = observed, y = predicted)) +\n  geom_point() +  \n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"blue\", linewidth=1) +  \n  labs(x = \"Observed Values\", y = \"Predicted Values\", title = \"Observed vs. Predicted Values (Linear: Y~All predictors)\" ) +\n  theme_minimal()  # Use a minimal theme for aesthetics\n\n\n\n\n\n\n\n\n\nFit a LASSO model with all predictors.\n\n\n#fit LASSO model: Y~all predictors\nlasso_mod &lt;- linear_reg(penalty = 0.1) %&gt;% set_engine(\"glmnet\")\nlasso_fit &lt;- lasso_mod %&gt;% fit(Y ~ ., data = module11)\ntidy(lasso_fit)\n\n# A tibble: 9 × 3\n  term         estimate penalty\n  &lt;chr&gt;           &lt;dbl&gt;   &lt;dbl&gt;\n1 (Intercept)  31373.       0.1\n2 DOSE           739.       0.1\n3 AGE              4.43     0.1\n4 SEX2          -431.       0.1\n5 RACE2          158.       0.1\n6 RACE3         -251.       0.1\n7 WT             137.       0.1\n8 HT          -16040.       0.1\n9 BMI           -509.       0.1\n\n# make predictions on the original data\npredictions2 &lt;- predict(lasso_fit, new_data = module11)\n\n# Compute RMSE \nrmse_2 &lt;- rmse_vec(module11$Y, predictions2$.pred)\n# print RMSE\ncat(\"RMSE:\", rmse_2, \"\\n\")\n\nRMSE: 571.6465 \n\n#Plot observed vs predicted values\nplot2&lt;-data.frame(\n  observed=module11$Y,\n  predicted=predictions2$.pred\n)\n\nggplot(plot2 ,aes(x = observed, y = predicted)) +\n  geom_point() +  \n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"blue\", linewidth=1) +  \n  labs(x = \"Observed Values\", y = \"Predicted Values\", title = \"Observed vs. Predicted Values (LASSO: Y~All predictors)\" ) +\n  theme_minimal()  # Use a minimal theme for aesthetics\n\n\n\n\n\n\n\n\n\nFit a random forest model with all predictors.\n\n\n#set random seed\nset.seed(rngseed)\n\n#fit RF model: Y~all predictors\nRF_mod &lt;-  rand_forest(mode = \"regression\") %&gt;% set_engine(\"ranger\", seed = rngseed)\nRF_fit &lt;- RF_mod %&gt;% fit(Y ~ ., data = module11)\nprint(RF_fit)\n\nparsnip model object\n\nRanger result\n\nCall:\n ranger::ranger(x = maybe_data_frame(x), y = y, seed = ~rngseed,      num.threads = 1, verbose = FALSE) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      120 \nNumber of independent variables:  7 \nMtry:                             2 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       497625.2 \nR squared (OOB):                  0.4618768 \n\n# make predictions on the original data\npredictions3 &lt;- predict(RF_fit, new_data = module11)\n\n# Compute RMSE \nrmse_3 &lt;- rmse_vec(module11$Y, predictions3$.pred)\n# print RMSE\ncat(\"RMSE:\", rmse_3, \"\\n\")\n\nRMSE: 361.6562 \n\n#Plot observed vs predicted values\nplot3&lt;-data.frame(\n  observed=module11$Y,\n  predicted=predictions3$.pred\n)\n\nggplot(plot3 ,aes(x = observed, y = predicted)) +\n  geom_point() +  \n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"blue\", linewidth=1) +  \n  labs(x = \"Observed Values\", y = \"Predicted Values\", title = \"Observed vs. Predicted Values (Random Forest: Y~All predictors)\" ) +\n  theme_minimal()  # Use a minimal theme for aesthetics\n\n\n\n\n\n\n\n\nModel performance: 1. Linear : RMSE=572 2. LASSO : RMSE=572 3. Random Forest: RMSE=362 The linear model and LASSO have similar performance, likely due to facts that penalty parameter is too small and there is low collinearity among the predictors. The random forest performs the best, as it has the lowest RMSE, and data points on the observed vs predicted values plot are closer to the diagonal line."
  },
  {
    "objectID": "ml-models-exercise/ml-models-exercise.html#tuning-the-models",
    "href": "ml-models-exercise/ml-models-exercise.html#tuning-the-models",
    "title": "Machine Learning Models Exercise (Week 11)",
    "section": "Tuning the models",
    "text": "Tuning the models\n\nTune the LASSO model\n\n\n#define a grid of penalty parameters ranging from 1E-5 to 1E2\npenalty_grid &lt;- grid_regular(penalty(range = c(log10(1E-5), log10(1E2))), levels = 50)\n\n#specify the LASSO model \nlasso_mod_tune &lt;- linear_reg(penalty = tune()) %&gt;%  set_engine(\"glmnet\")\n\n#create a workflow to tune the LASSO model\nlasso_workflow &lt;- workflow() %&gt;%\n  add_model(lasso_mod_tune) %&gt;%\n  add_formula(Y ~ .)\n\n#create apparent resamples as the same data is used for performance evaluation\napparent_sample &lt;- apparent(module11)\n\n#tune the LASSO model using tune_grid() \nlasso_tuned &lt;- tune_grid(\n  object = lasso_workflow,\n  grid = penalty_grid,\n  resamples=apparent_sample\n)\n\n#Show diagnostics of the LASSO tuning\nlasso_tuned %&gt;% autoplot() + ggtitle(\"LASSO Tuning Results\")\n\n\n\n\n\n\n\n\nLASSO has better performance for low penalty values and gets worse if the penalty parameter increases. This is probably because the total numbers of predictors is too small. As penalty parameter increases, some predictors are dropped, and thus fewer predictors are left to account for the variation in the outcome Y. With fewer predictors left, the model is underfitted which leads to poorer performance of the model.\n\nTune the random forest\n\n\n#set random seed\nset.seed(rngseed)\n\n#define a grid of penalty parameters range for mtry (1 to 7) and min_n (1 to 21)\nrf_grid &lt;- grid_regular( mtry(range = c(1, 7)), min_n(range = c(1, 21)), levels = 7)\n\n#specify the random forest  \nRF_mod_tune &lt;-  rand_forest(mtry = tune(), min_n = tune(),trees=300)  %&gt;% \n  set_engine(\"ranger\", seed = rngseed) %&gt;%\n  set_mode(\"regression\")\n  \n#create a workflow to tune the RF model\nrf_workflow &lt;- workflow() %&gt;%\n  add_model(RF_mod_tune) %&gt;%\n  add_formula(Y ~ .)\n\n#tune the Random Forest model using tune_grid() \nRF_tuned &lt;- tune_grid(\n  object = rf_workflow,\n  grid = rf_grid,\n  resamples=apparent_sample\n)\n\n#Show diagnostics of the RF tuning\nRF_tuned %&gt;% autoplot() + ggtitle(\"Random Forest Tuning Results\")"
  },
  {
    "objectID": "ml-models-exercise/ml-models-exercise.html#tuning-with-cv",
    "href": "ml-models-exercise/ml-models-exercise.html#tuning-with-cv",
    "title": "Machine Learning Models Exercise (Week 11)",
    "section": "Tuning with CV",
    "text": "Tuning with CV\nRepeat tuning the LASSO and Random Forest models with cross-validation\n\nTune the LASSO model with cross-validation\n\n\n#set random seed\nset.seed(rngseed)\n\n#create CV resamples (5-fold cross-validation, 5 times)\ncv_samples &lt;- vfold_cv(module11, v = 5, repeats = 5)\n\n#use the same workflow to tune the LASSO model with cross-validation\nlasso_tuned_cv &lt;- tune_grid(\n  object = lasso_workflow,\n  grid = penalty_grid,\n  resamples=cv_samples\n)\n\n#Show diagnostics of the LASSO tuning\nlasso_tuned_cv %&gt;% autoplot() + ggtitle(\"LASSO Tuning Results with CV\")\n\n\n\n\n\n\n\n\n\nTune the random forest with cross-validation\n\n\n#set random seed\nset.seed(rngseed)\n\n#use the same workflow to tune the Random Forest model with cross-validation\nRF_tuned_cv &lt;- tune_grid(\n  object = rf_workflow,\n  grid = rf_grid,\n  resamples=cv_samples\n)\n\n#show diagnostics of the RF tuning\nRF_tuned_cv %&gt;% autoplot() + ggtitle(\"Random Forest Tuning Results with CV\")\n\n\n\n\n\n\n\n\nLASSO models with and without CV display similar pattern in the change of performance as penalty parameter increases. However, LASSO model without CV has better performance (lower RMSE) than LASSO model with CV given the same penalty value. This is probably due to fact that its performance evaluation is based on the same data used for model fitting.\nRandom forest models with and without CV also show similar pattern in the change of performance as hyperparameters change. Generally, model performance is higher with larger number of randomly selected predictors and larger minimal node sizes. When cross-validation is used, minimal node size seems to have a smaller impact on the performance of the model.\nBased on results with cross-validation, LASSO model has lower RMSE and higher r-squared than random forest when penalty parameter is small. Thus, LASSO model has better performance than the random forest model."
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Chaohua Li Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at C:/Users/chaoh/Desktop/UGA Courses/4_Spring 2024/EPID 8060E/MADA/chaohuali-MADA-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  character                1     \n  factor                   1     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate min max empty n_unique whitespace\n1 Eye                   0             1   4   5     0        4          0\n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n3 Age                   0             1  33.3 17.6  16  23  24  45   67 ▇▂▂▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nBox plot with eye on x-axis and height on y-axis\n\np5 &lt;- mydata %&gt;% ggplot(aes(x=Eye, y=Height)) + geom_boxplot()\nplot(p5)\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"eye-height.png\")\nggsave(filename = figure_file, plot=p5) \n\nSaving 7 x 5 in image\n\n\n\n\nScatter plot with weight on x-axis and age on y-axis\n\np6 &lt;- mydata %&gt;% ggplot(aes(x=Weight, y=Age)) + geom_point() + geom_smooth(method='lm')\nplot(p6)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-age.png\")\nggsave(filename = figure_file, plot=p6) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile 2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile 2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at C:/Users/chaoh/Desktop/UGA Courses/4_Spring 2024/EPID 8060E/MADA/chaohuali-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`        \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                   \n1 Height          height in centimeters                 numeric value &gt;0 or NA  \n2 Weight          weight in kilograms                   numeric value &gt;0 or NA  \n3 Gender          identified gender (male/female/other) M/F/O/NA                \n4 Age             Age in years                          numeric value &gt;0 or NA  \n5 Eye             Eye color (Black/Brown/Blue/Other)    black/brown/blue/other/…\n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n$ Age    &lt;dbl&gt; 33, 23, 25, 23, 67, 17, 45, 67, 42, 23, 34, 52, 16, 24\n$ Eye    &lt;chr&gt; \"black\", \"black\", \"black\", \"black\", \"blue\", \"blue\", \"blue\", \"ot…\n\nsummary(rawdata)\n\n    Height              Weight          Gender               Age       \n Length:14          Min.   :  45.0   Length:14          Min.   :16.00  \n Class :character   1st Qu.:  55.0   Class :character   1st Qu.:23.00  \n Mode  :character   Median :  70.0   Mode  :character   Median :29.00  \n                    Mean   : 602.7                      Mean   :35.07  \n                    3rd Qu.:  90.0                      3rd Qu.:44.25  \n                    Max.   :7000.0                      Max.   :67.00  \n                    NA's   :1                                          \n     Eye           \n Length:14         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender   Age Eye  \n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;\n1 180        80 M         33 black\n2 175        70 O         23 black\n3 sixty      60 F         25 black\n4 178        76 F         23 black\n5 192        90 NA        67 blue \n6 6          55 F         17 blue \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nEye\n0\n1\n4\n5\n0\n4\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90.00\n7000\n▇▁▁▁▁\n\n\nAge\n0\n1.00\n35.07\n17.16\n16\n23\n29\n44.25\n67\n▇▂▂▁▂\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nEye\n0\n1\n4\n5\n0\n4\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nAge\n0\n1.00\n35.85\n17.61\n16\n23.00\n33\n45\n67\n▇▂▂▁▂\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nEye\n0\n1\n4\n5\n0\n4\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nAge\n0\n1.00\n35.85\n17.61\n16\n23.00\n33\n45\n67\n▇▂▂▁▂\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nEye\n0\n1\n4\n5\n0\n4\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nAge\n0\n1\n37.18\n18.79\n16\n23.0\n33\n48.5\n67\n▇▂▃▂▃\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nEye\n0\n1\n4\n5\n0\n4\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nAge\n0\n1\n37.18\n18.79\n16\n23.0\n33\n48.5\n67\n▇▂▃▂▃\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nEye\n0\n1\n4\n5\n0\n4\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nAge\n0\n1\n33.33\n17.63\n16\n23\n24\n45\n67\n▇▂▂▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Chaohua Li Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Chaohua Li Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Chaohua Li Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Chaohua Li Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Chaohua Li Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  }
]